#ifndef CHARACTER_H_
#error character_inl.h must be included by character.h only
#endif


#ifndef CHA_IMPLEMENTATION_GUARD
#ifndef CHARACTER_INL_DECL
#define CHARACTER_INL_DECL

enum ChaArmatureNameEnum {
    CHA_ARMATURE_NAME_BODY=0,
    CHA_ARMATURE_NAME_COUNT
};
enum ChaMaterialNameEnum    {
    CHA_MATERIAL_NAME_HAIR=0,
    CHA_MATERIAL_NAME_IRID,
    CHA_MATERIAL_NAME_LIPS,
    CHA_MATERIAL_NAME_PUPIL,
    CHA_MATERIAL_NAME_SHOES_BELT,
    CHA_MATERIAL_NAME_SKIN,
    CHA_MATERIAL_NAME_T_SHIRT,
    CHA_MATERIAL_NAME_TEETH,
    CHA_MATERIAL_NAME_TROUSERS,
    CHA_MATERIAL_NAME_WHITE_EYE,
    CHA_MATERIAL_NAME_COUNT
};
enum ChaBoneNameEnum    {
    CHA_BONE_NAME_ROOT          = 0,

    CHA_BONE_NAME_PELVIS_BODY   = 1,
    CHA_BONE_NAME_BODY_NECK     = 2,
    CHA_BONE_NAME_NECK_HEAD     = 3,

    CHA_BONE_NAME_UPPERARM_LOWERARM_L   = 4,
    CHA_BONE_NAME_LOWERARM_WRIST_L      = 5,
    CHA_BONE_NAME_HAND1_L               = 6,
    CHA_BONE_NAME_HAND2_L               = 7,
    CHA_BONE_NAME_HAND3_L               = 8,
    CHA_BONE_NAME_THUMB_L               = 9,

    CHA_BONE_NAME_UPPERARM_LOWERARM_R   = 10,
    CHA_BONE_NAME_LOWERARM_WRIST_R      = 11,
    CHA_BONE_NAME_HAND1_R               = 12,
    CHA_BONE_NAME_HAND2_R               = 13,
    CHA_BONE_NAME_HAND3_R               = 14,
    CHA_BONE_NAME_THUMB_R               = 15,

    CHA_BONE_NAME_HIP_LOWERLEG_L    = 16,
    CHA_BONE_NAME_LOWERLEG_ANKLE_L  = 17,
    CHA_BONE_NAME_ANKLE_FOOT_L      = 18,

    CHA_BONE_NAME_HIP_LOWERLEG_R    = 19,
    CHA_BONE_NAME_LOWERLEG_ANKLE_R  = 20,
    CHA_BONE_NAME_ANKLE_FOOT_R      = 21,

    CHA_BONE_NAME_COUNT
};
enum ChaBoneNameMask    {
    CHA_BONE_MASK_ROOT          = 1<<0,

    CHA_BONE_MASK_PELVIS_BODY   = 1<<1,
    CHA_BONE_MASK_BODY_NECK     = 1<<2,
    CHA_BONE_MASK_NECK_HEAD     = 1<<3,

    CHA_BONE_MASK_UPPERARM_LOWERARM_L   = 1<<4,
    CHA_BONE_MASK_LOWERARM_WRIST_L      = 1<<5,
    CHA_BONE_MASK_HAND1_L               = 1<<6,
    CHA_BONE_MASK_HAND2_L               = 1<<7,
    CHA_BONE_MASK_HAND3_L               = 1<<8,
    CHA_BONE_MASK_THUMB_L               = 1<<9,

    CHA_BONE_MASK_UPPERARM_LOWERARM_R   = 1<<10,
    CHA_BONE_MASK_LOWERARM_WRIST_R      = 1<<11,
    CHA_BONE_MASK_HAND1_R               = 1<<12,
    CHA_BONE_MASK_HAND2_R               = 1<<13,
    CHA_BONE_MASK_HAND3_R               = 1<<14,
    CHA_BONE_MASK_THUMB_R               = 1<<15,

    CHA_BONE_MASK_HIP_LOWERLEG_L    = 1<<16,
    CHA_BONE_MASK_LOWERLEG_ANKLE_L  = 1<<17,
    CHA_BONE_MASK_ANKLE_FOOT_L      = 1<<18,

    CHA_BONE_MASK_HIP_LOWERLEG_R    = 1<<19,
    CHA_BONE_MASK_LOWERLEG_ANKLE_R  = 1<<20,
    CHA_BONE_MASK_ANKLE_FOOT_R      = 1<<21,


    CHA_BONE_MASK_SPINE = CHA_BONE_MASK_PELVIS_BODY|CHA_BONE_MASK_BODY_NECK|CHA_BONE_MASK_NECK_HEAD,
    CHA_BONE_MASK_ROOT_AND_SPINE = CHA_BONE_MASK_ROOT|CHA_BONE_MASK_SPINE,

    CHA_BONE_MASK_ARM_L = CHA_BONE_MASK_UPPERARM_LOWERARM_L|CHA_BONE_MASK_LOWERARM_WRIST_L,
    CHA_BONE_HAND_L = CHA_BONE_MASK_HAND1_L|CHA_BONE_MASK_HAND2_L|CHA_BONE_MASK_HAND3_L|CHA_BONE_MASK_THUMB_L,
    CHA_BONE_MASK_ARM_AND_HAND_L = CHA_BONE_MASK_ARM_L|CHA_BONE_HAND_L,

    CHA_BONE_MASK_ARM_R = CHA_BONE_MASK_UPPERARM_LOWERARM_R|CHA_BONE_MASK_LOWERARM_WRIST_R,
    CHA_BONE_HAND_R = CHA_BONE_MASK_HAND1_R|CHA_BONE_MASK_HAND2_R|CHA_BONE_MASK_HAND3_R|CHA_BONE_MASK_THUMB_R,
    CHA_BONE_MASK_ARM_AND_HAND_R = CHA_BONE_MASK_ARM_R|CHA_BONE_HAND_R,

    CHA_BONE_MASK_ARMS = CHA_BONE_MASK_ARM_L|CHA_BONE_MASK_ARM_R,
    CHA_BONE_HANDS = CHA_BONE_HAND_L|CHA_BONE_HAND_R,
    CHA_BONE_MASK_ARMS_AND_HANDS = CHA_BONE_MASK_ARMS|CHA_BONE_HANDS,

    CHA_BONE_MASK_LEG_L = CHA_BONE_MASK_HIP_LOWERLEG_L|CHA_BONE_MASK_LOWERLEG_ANKLE_L,
    CHA_BONE_MASK_LEG_AND_FOOT_L = CHA_BONE_MASK_LEG_L|CHA_BONE_MASK_ANKLE_FOOT_L,

    CHA_BONE_MASK_LEG_R = CHA_BONE_MASK_HIP_LOWERLEG_R|CHA_BONE_MASK_LOWERLEG_ANKLE_R,
    CHA_BONE_MASK_LEG_AND_FOOT_R = CHA_BONE_MASK_LEG_R|CHA_BONE_MASK_ANKLE_FOOT_R,

    CHA_BONE_MASK_LEGS = CHA_BONE_MASK_LEG_L|CHA_BONE_MASK_LEG_R,
    CHA_BONE_MASK_FEET = CHA_BONE_MASK_ANKLE_FOOT_L|CHA_BONE_MASK_ANKLE_FOOT_R,
    CHA_BONE_MASK_LEGS_AND_FEET = CHA_BONE_MASK_LEGS|CHA_BONE_MASK_FEET,

    CHA_BONE_MASK_ALL = CHA_BONE_MASK_ROOT_AND_SPINE|CHA_BONE_MASK_ARMS_AND_HANDS|CHA_BONE_MASK_LEGS_AND_FEET
};
enum ChaArmatureActionNameEnum {
    CHA_ARMATURE_ACTION_NAME_CYCLE_RUN = 0,
    CHA_ARMATURE_ACTION_NAME_CYCLE_WALK,
    CHA_ARMATURE_ACTION_NAME_FALL_DOWN,
    CHA_ARMATURE_ACTION_NAME_POSE_GRAB_WALL,
    CHA_ARMATURE_ACTION_NAME_POSE_SIT_DOWN,
    CHA_ARMATURE_ACTION_NAME_POSE_STAND_UP,
    CHA_ARMATURE_ACTION_NAME_COUNT
};
enum ChaEyeShapeKeyNameEnum   {
    CHA_EYE_SHAPE_KEY_NAME_BASIS=0,
    CHA_EYE_SHAPE_KEY_NAME_CLOSED,
    CHA_EYE_SHAPE_KEY_NAME_RIGHT,
    CHA_EYE_SHAPE_KEY_NAME_LEFT,
    CHA_EYE_SHAPE_KEY_NAME_UP,
    CHA_EYE_SHAPE_KEY_NAME_DOWN,
    CHA_EYE_SHAPE_KEY_NAME_COUNT
};
enum ChaMouthShapeKeyNameEnum   {
    CHA_MOUTH_SHAPE_KEY_NAME_BASIS=0,
    CHA_MOUTH_SHAPE_KEY_NAME_OPEN,
    CHA_MOUTH_SHAPE_KEY_NAME_SMILE,
    CHA_MOUTH_SHAPE_KEY_NAME_SAD,
    CHA_MOUTH_SHAPE_KEY_NAME_COUNT
};


enum ChaMeshNameEnum {
    CHA_MESH_NAME_BODY=0,
    CHA_MESH_NAME_HEAD,
    CHA_MESH_NAME_MOUTH,
    CHA_MESH_NAME_EYE,
    CHA_MESH_NAME_COUNT
};
enum ChaMeshNameMask {
    CHA_MESH_MASK_BODY   =  1<<0,
    CHA_MESH_MASK_HEAD  =  1<<1,
    CHA_MESH_MASK_MOUTH =  1<<2,
    CHA_MESH_MASK_EYE   =  1<<3,

    CHA_MESH_MASK_BODY_AND_HEAD = CHA_MESH_MASK_BODY|CHA_MESH_MASK_HEAD,
    CHA_MESH_MASK_MOUTH_AND_EYE = CHA_MESH_MASK_MOUTH|CHA_MESH_MASK_EYE,
    CHA_MESH_MASK_ALL = CHA_MESH_MASK_BODY_AND_HEAD|CHA_MESH_MASK_MOUTH_AND_EYE
};

#endif /* CHARACTER_INL_DECL */
#else /* CHA_IMPLEMENTATION_GUARD */
#ifndef CHARACTER_INL_DEF
#define CHARACTER_INL_DEF


void cha_armature_init_body(struct cha_armature* p)  {

/* bone[0]=='root' is not a deform bone */
/* bone indices are:
    root      spine       left arm              right arm            left leg    right leg
     {0,      1,2,3,     4,5,6,7,8,9,        10,11,12,13,14,15,      16,17,18,   19,20,21}  */

    const int gNumBones = CHA_BONE_NAME_COUNT;
    const char* gBoneNames[CHA_BONE_NAME_COUNT] = {"root","pelvis_body","body_neck","neck_head","upperarm_lowerarm.L","lowerarm_wrist.L","hand1.L","hand2.L","hand3.L","thumb.L","upperarm_lowerarm.R","lowerarm_wrist.R","hand1.R","hand2.R","hand3.R","thumb.R","hip_lowerleg.L","lowerleg_ankle.L","ankle_foot_L","hip_lowerleg.R","lowerleg_ankle.R","ankle_foot_R"};
    const int gBoneSymmetry[CHA_BONE_NAME_COUNT] = {0,1,2,3, 10,11,12,13,14,15,  4,5,6,7,8,9,    19,20,21,   16,17,18};
    const int gBoneParents[CHA_BONE_NAME_COUNT] = {-1,0,1,2,1,4,5,6,7,6,1,10,11,12,13,12,0,16,17,0,19,20};
    struct cha_armature_bone_space_data gBoneDataPairs[2*CHA_BONE_NAME_COUNT] = {{{0.f,0.00002f,0.00007f},{0.f,0.00002f,0.14329f},3.14159f,{-1.f,0.f,0.f,0.f,0.f,-0.f,1.f,0.f,0.f,1.f,0.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.f,0.00002f,0.00007f},{0.f,0.00002f,0.14329f},3.14159f,{-1.f,0.f,0.f,0.f,0.f,-0.f,1.f,0.f,0.f,1.f,0.f,0.f,0.f,0.00002f,0.00007f,1.f},{0}},{{0.f,0.36223f,0.00068f},{0.f,0.6443f,0.00068f},-3.14159f,{-1.f,-0.f,0.f,0.f,0.f,1.f,0.f,0.f,-0.f,0.f,-1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.f,0.0007f,0.50551f},{0.f,0.0007f,0.78759f},0.f,{1.f,0.f,-0.f,0.f,0.f,0.f,1.f,0.f,0.f,-1.f,0.f,0.f,0.f,0.0007f,0.50551f,1.f},{0}},{{0.f,0.f,0.f},{-0.f,0.07168f,0.f},-0.f,{1.f,0.f,0.f,0.f,-0.f,1.f,0.f,0.f,-0.f,-0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.f,0.0007f,0.78759f},{0.f,0.0007f,0.85928f},0.f,{1.f,0.f,-0.f,0.f,0.f,-0.f,1.f,0.f,0.f,-1.f,0.f,0.f,0.f,0.0007f,0.78759f,1.f},{0}},{{0.f,0.f,-0.f},{-0.f,0.07303f,-0.f},-0.f,{1.f,0.f,0.f,0.f,-0.f,1.f,-0.f,0.f,-0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.f,0.0007f,0.85928f},{0.f,0.0007f,0.93231f},0.f,{1.f,-0.f,-0.f,0.f,0.f,0.f,1.f,0.f,0.f,-1.f,0.f,0.f,0.f,0.0007f,0.85928f,1.f},{0}},{{0.11228f,0.01784f,0.00081f},{0.26769f,0.01784f,0.00081f},3.14159f,{0.f,1.f,-0.f,0.f,1.f,0.f,0.f,0.f,0.f,-0.f,-1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.11228f,-0.00011f,0.80543f},{0.26769f,-0.00011f,0.80543f},-1.5708f,{-0.f,0.f,1.f,0.f,1.f,-0.f,-0.f,0.f,0.f,1.f,-0.f,0.f,0.11228f,-0.00011f,0.80543f,1.f},{0}},{{0.f,0.f,0.f},{0.f,0.1574f,0.f},0.f,{1.f,-0.f,-0.f,0.f,0.f,1.f,0.f,0.f,0.f,-0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.26769f,-0.00011f,0.80543f},{0.42508f,-0.00011f,0.80543f},-1.5708f,{-0.f,0.f,1.f,0.f,1.f,-0.f,0.f,0.f,0.f,1.f,-0.f,0.f,0.26769f,-0.00011f,0.80543f,1.f},{0}},{{0.f,0.f,0.f},{-0.f,0.03553f,-0.f},0.f,{1.f,-0.f,-0.f,0.f,-0.f,1.f,-0.f,0.f,0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.42508f,-0.00011f,0.80543f},{0.46061f,-0.00011f,0.80543f},-1.5708f,{-0.f,-0.f,1.f,0.f,1.f,-0.f,0.f,0.f,0.f,1.f,0.f,0.f,0.42508f,-0.00011f,0.80543f,1.f},{0}},{{0.f,0.f,0.f},{-0.f,0.02538f,0.f},0.f,{1.f,0.f,-0.f,0.f,-0.f,1.f,0.f,0.f,0.f,-0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.46061f,-0.00011f,0.80543f},{0.48599f,-0.00011f,0.80543f},-1.5708f,{-0.f,-0.f,1.f,0.f,1.f,-0.f,-0.f,0.f,0.f,1.f,0.f,0.f,0.46061f,-0.00011f,0.80543f,1.f},{0}},{{0.f,0.f,0.f},{0.f,0.02499f,-0.f},-0.f,{1.f,0.f,0.f,0.f,0.f,1.f,-0.f,0.f,-0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.48599f,-0.00011f,0.80543f},{0.51098f,-0.00011f,0.80543f},-1.5708f,{0.f,0.f,1.f,0.f,1.f,-0.f,0.f,0.f,0.f,1.f,-0.f,0.f,0.48599f,-0.00011f,0.80543f,1.f},{0}},{{0.f,-0.01501f,-0.02473f},{0.f,0.00977f,-0.04066f},-0.f,{1.f,0.f,0.f,0.f,0.f,0.8413f,-0.54057f,0.f,-0.f,0.54057f,0.8413f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.4456f,-0.02484f,0.80543f},{0.47039f,-0.04077f,0.80543f},-1.5708f,{0.f,0.f,1.f,0.f,0.8413f,-0.54057f,0.f,0.f,0.54057f,0.8413f,-0.f,0.f,0.4456f,-0.02484f,0.80543f,1.f},{0}},{{-0.11199f,0.01799f,0.00081f},{-0.2674f,0.01799f,0.00081f},-3.14159f,{-0.f,-1.f,0.f,0.f,-1.f,0.f,-0.f,0.f,0.f,-0.f,-1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{-0.11199f,-0.00011f,0.80558f},{-0.2674f,-0.00011f,0.80558f},1.5708f,{0.f,-0.f,-1.f,0.f,-1.f,-0.f,0.f,0.f,-0.f,1.f,-0.f,0.f,-0.11199f,-0.00011f,0.80558f,1.f},{0}},{{0.f,0.f,0.f},{0.f,0.1574f,0.f},-0.f,{1.f,-0.f,0.f,0.f,0.f,1.f,0.f,0.f,-0.f,-0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{-0.2674f,-0.00011f,0.80558f},{-0.4248f,-0.00011f,0.80558f},1.5708f,{0.f,0.f,-1.f,0.f,-1.f,-0.f,-0.f,0.f,-0.f,1.f,0.f,0.f,-0.2674f,-0.00011f,0.80558f,1.f},{0}},{{0.f,-0.f,0.f},{-0.f,0.03553f,-0.f},-0.f,{1.f,0.f,0.f,0.f,-0.f,1.f,-0.f,0.f,-0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{-0.4248f,-0.00011f,0.80558f},{-0.46033f,-0.00011f,0.80558f},1.5708f,{0.f,0.f,-1.f,0.f,-1.f,-0.f,-0.f,0.f,-0.f,1.f,0.f,0.f,-0.4248f,-0.00011f,0.80558f,1.f},{0}},{{0.f,-0.f,0.f},{0.f,0.02538f,0.f},-0.f,{1.f,-0.f,-0.f,0.f,0.f,1.f,0.f,0.f,-0.f,-0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{-0.46033f,-0.00011f,0.80558f},{-0.48571f,-0.00011f,0.80558f},1.5708f,{0.f,0.f,-1.f,0.f,-1.f,-0.f,0.f,0.f,-0.f,1.f,0.f,0.f,-0.46033f,-0.00011f,0.80558f,1.f},{0}},{{0.f,-0.f,0.f},{-0.f,0.02499f,-0.f},0.f,{1.f,-0.f,-0.f,0.f,-0.f,1.f,-0.f,0.f,0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{-0.48571f,-0.00011f,0.80558f},{-0.5107f,-0.00011f,0.80558f},1.5708f,{0.f,-0.f,-1.f,0.f,-1.f,-0.f,0.f,0.f,-0.f,1.f,-0.f,0.f,-0.48571f,-0.00011f,0.80558f,1.f},{0}},{{-0.f,-0.01501f,-0.02473f},{-0.f,0.00977f,-0.04066f},0.f,{1.f,-0.f,-0.f,0.f,-0.f,0.8413f,-0.54057f,0.f,0.f,0.54057f,0.8413f,0.f,0.f,0.f,0.f,1.f},{0}},{{-0.44532f,-0.02484f,0.80558f},{-0.4701f,-0.04077f,0.80558f},1.5708f,{0.f,-0.f,-1.f,0.f,-0.8413f,-0.54057f,0.f,0.f,-0.54057f,0.8413f,-0.f,0.f,-0.44532f,-0.02484f,0.80558f,1.f},{0}},{{-0.05824f,0.3497f,0.00068f},{-0.05824f,0.10588f,0.00068f},-0.f,{-1.f,-0.f,0.f,0.f,0.f,-1.f,0.f,0.f,0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.05824f,0.0007f,0.49298f},{0.05824f,0.0007f,0.24917f},0.f,{1.f,0.f,-0.f,0.f,-0.f,0.f,-1.f,0.f,0.f,1.f,0.f,0.f,0.05824f,0.0007f,0.49298f,1.f},{0}},{{0.f,0.f,0.f},{0.f,0.18803f,-0.f},0.f,{1.f,-0.f,0.f,0.f,0.f,1.f,-0.f,0.f,0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.05824f,0.0007f,0.24917f},{0.05824f,0.0007f,0.06114f},0.f,{1.f,-0.f,-0.f,0.f,0.f,0.f,-1.f,0.f,0.f,1.f,-0.f,0.f,0.05824f,0.0007f,0.24917f,1.f},{0}},{{0.f,-0.f,0.f},{0.f,0.05071f,0.f},-0.f,{1.f,0.f,0.f,0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{0.05824f,0.0007f,0.06114f},{0.05824f,0.0007f,0.01043f},0.f,{1.f,-0.f,-0.f,0.f,0.f,0.f,-1.f,0.f,0.f,1.f,-0.f,0.f,0.05824f,0.0007f,0.06114f,1.f},{0}},{{0.05824f,0.3497f,0.00068f},{0.05824f,0.10588f,0.00068f},-0.f,{-1.f,-0.f,0.f,0.f,0.f,-1.f,0.f,0.f,0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{-0.05824f,0.0007f,0.49298f},{-0.05824f,0.0007f,0.24917f},0.f,{1.f,0.f,-0.f,0.f,-0.f,0.f,-1.f,0.f,0.f,1.f,0.f,0.f,-0.05824f,0.0007f,0.49298f,1.f},{0}},{{0.f,0.f,0.f},{0.f,0.18803f,-0.f},0.f,{1.f,-0.f,0.f,0.f,0.f,1.f,-0.f,0.f,0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{-0.05824f,0.0007f,0.24917f},{-0.05824f,0.0007f,0.06114f},0.f,{1.f,-0.f,-0.f,0.f,0.f,0.f,-1.f,0.f,0.f,1.f,-0.f,0.f,-0.05824f,0.0007f,0.24917f,1.f},{0}},{{0.f,-0.f,0.f},{0.f,0.05071f,0.f},-0.f,{1.f,0.f,0.f,0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f,0.f,0.f,0.f,0.f,1.f},{0}},{{-0.05824f,0.0007f,0.06114f},{-0.05824f,0.0007f,0.01043f},0.f,{1.f,-0.f,-0.f,0.f,0.f,0.f,-1.f,0.f,0.f,1.f,-0.f,0.f,-0.05824f,0.0007f,0.06114f,1.f},{0}}};

    const int gNumActions = CHA_ARMATURE_ACTION_NAME_COUNT;
    const char* gActionNames[CHA_ARMATURE_ACTION_NAME_COUNT] =  {"CycleRun","CycleWalk","FallDown","PoseGrabWall","PoseSitDown","PoseStandUp"};

    /* We support translational key frames for the first bone only (the root),
       and rotational key frames for all the bones (first bone included)
       So the numbers here are [CHA_ARMATURE_NUM_BONES+1]: num_bone0_trans_kfs,num_bone0_rot_kfs,num_bone1_rot_kfs,num_bone2_rot_kfs,...
    */
    const int gNumKeyFrames[CHA_ARMATURE_ACTION_NAME_COUNT*(CHA_BONE_NAME_COUNT+1)] = {
            12,0,1,1,1,2,2,2,0,0,0,2,2,2,0,0,0,11,11,12,11,11,12,   /* action 0; (CHA_ARMATURE_NUM_BONES+1) entries */
            12,0,1,1,1,2,2,2,0,0,0,2,2,2,0,0,0,12,12,12,12,12,12,   /* action 1; (CHA_ARMATURE_NUM_BONES+1) entries */
            7,7,4,5,5,6,4,1,1,1,1,6,4,1,1,1,1,6,6,5,6,6,5,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    };
    const struct cha_armature_action_key_frame gKeyFrames[353] = {{0.f,-0.01019f,0.f,0.f,1.f},{0.f,-0.03483f,0.f,0.f,3.f},{0.f,-0.0064f,0.f,0.f,5.f},{0.f,-0.00098f,0.f,0.f,7.f},{0.f,-0.00213f,0.f,0.f,9.f},{0.f,-0.00213f,0.f,0.f,11.f},{0.f,-0.00152f,0.f,0.f,13.f},{0.f,-0.0341f,0.f,0.f,15.f},{0.f,-0.00598f,0.f,0.f,17.f},{0.f,0.00591f,0.f,0.f,19.f},{0.f,-0.00103f,0.f,0.f,21.f},{0.f,-0.00076f,0.f,0.f,23.f},{0.09282f,0.f,0.f,0.99568f,1.f},{0.09545f,0.f,0.f,0.99543f,1.f},{-0.19006f,0.f,0.f,0.98177f,1.f},{0.00477f,-0.01701f,0.64472f,0.76421f,1.f},{0.16292f,0.1675f,0.6245f,0.74526f,13.f},{-0.34108f,-0.03019f,0.04362f,0.93854f,1.f},{-0.17312f,-0.0055f,0.04255f,0.98397f,13.f},{-0.04256f,-0.01358f,0.0425f,0.9981f,1.f},{-0.04409f,0.00394f,0.04292f,0.9981f,13.f},{0.16292f,-0.1675f,-0.6245f,0.74526f,1.f},{0.00477f,0.01701f,-0.64472f,0.76421f,13.f},{-0.17312f,0.0055f,-0.04255f,0.98397f,1.f},{-0.34108f,0.03019f,-0.04362f,0.93854f,13.f},{-0.04409f,-0.00394f,-0.04292f,0.9981f,1.f},{-0.04256f,0.01358f,-0.0425f,0.9981f,13.f},{0.063f,0.f,0.f,0.99801f,1.f},{-0.25782f,0.f,0.f,0.98716f,3.f},{-0.55118f,0.f,0.f,0.83439f,7.f},{-0.447f,0.f,0.f,0.89319f,9.f},{-0.26907f,0.f,0.f,0.96525f,11.f},{-0.15813f,0.f,0.f,0.98742f,13.f},{-0.23672f,0.f,0.f,0.97158f,15.f},{-0.06945f,0.f,0.f,0.997f,17.f},{0.12196f,0.f,0.f,0.99808f,19.f},{0.18043f,0.f,0.f,0.98359f,21.f},{0.18043f,0.f,0.f,0.98359f,23.f},{0.6715f,0.f,0.f,0.741f,1.f},{0.71658f,0.f,0.f,0.69751f,3.f},{0.69308f,0.f,0.f,0.72112f,7.f},{0.32719f,0.f,0.f,0.95742f,9.f},{0.12991f,0.f,0.f,0.99753f,11.f},{0.07023f,0.f,0.f,0.99753f,13.f},{0.37175f,0.f,0.f,0.92833f,15.f},{0.23008f,0.f,0.f,0.97408f,17.f},{0.16568f,0.f,0.f,0.98618f,19.f},{0.52145f,0.f,0.f,0.86127f,21.f},{0.52145f,0.f,0.f,0.85328f,23.f},{0.05735f,0.f,0.f,0.99835f,1.f},{0.05735f,0.f,0.f,0.99835f,3.f},{0.35576f,0.f,0.f,0.92118f,5.f},{-0.14457f,0.f,0.f,0.9999f,7.f},{0.01427f,0.f,0.f,0.9999f,9.f},{0.01427f,0.f,0.f,0.9999f,11.f},{-0.01061f,0.f,0.f,1.f,13.f},{-0.14935f,0.f,0.f,0.98878f,15.f},{-0.1258f,0.f,0.f,0.99201f,17.f},{-0.06949f,0.f,0.f,0.99476f,19.f},{0.11052f,0.f,0.f,0.99387f,21.f},{0.11052f,0.f,0.f,0.99387f,23.f},{-0.15813f,0.f,0.f,0.98742f,1.f},{-0.23672f,0.f,0.f,0.97158f,3.f},{0.11416f,0.f,0.f,0.99808f,7.f},{0.18043f,0.f,0.f,0.98359f,9.f},{0.18043f,0.f,0.f,0.98359f,11.f},{0.00729f,0.f,0.f,0.99801f,13.f},{-0.19358f,0.f,0.f,0.99078f,15.f},{-0.47636f,0.f,0.f,0.88963f,17.f},{-0.55118f,0.f,0.f,0.83439f,19.f},{-0.447f,0.f,0.f,0.89319f,21.f},{-0.33352f,0.f,0.f,0.94274f,23.f},{0.07023f,0.f,0.f,0.99753f,1.f},{0.37175f,0.f,0.f,0.92833f,3.f},{0.16568f,0.f,0.f,0.98618f,7.f},{0.52145f,0.f,0.f,0.86127f,9.f},{0.56241f,0.f,0.f,0.82476f,11.f},{0.70955f,0.f,0.f,0.71062f,13.f},{0.71658f,0.f,0.f,0.69751f,15.f},{0.71273f,0.f,0.f,0.70145f,17.f},{0.68716f,0.f,0.f,0.72702f,19.f},{0.32719f,0.f,0.f,0.95742f,21.f},{0.19879f,0.f,0.f,0.98004f,23.f},{0.00183f,0.f,0.f,1.f,1.f},{-0.14813f,0.f,0.f,0.98897f,3.f},{-0.126f,0.f,0.f,0.99169f,5.f},{-0.06953f,0.f,0.f,0.99476f,7.f},{0.11052f,0.f,0.f,0.99387f,9.f},{0.11052f,0.f,0.f,0.99387f,11.f},{0.05735f,0.f,0.f,0.99835f,13.f},{0.05735f,0.f,0.f,0.99835f,15.f},{0.36027f,0.f,0.f,0.93285f,17.f},{-0.14457f,0.f,0.f,0.9999f,19.f},{0.01427f,0.f,0.f,0.9999f,21.f},{0.01427f,0.f,0.f,0.9999f,23.f},{0.f,0.f,0.f,0.f,1.f},{0.f,0.f,0.f,0.f,3.f},{0.f,0.f,0.f,0.f,5.f},{0.f,0.f,0.f,0.f,7.f},{0.f,-0.00513f,0.f,0.f,9.f},{0.f,0.f,0.f,0.f,11.f},{0.f,0.f,0.f,0.f,13.f},{0.f,0.f,0.f,0.f,15.f},{0.f,0.f,0.f,0.f,17.f},{0.f,0.f,0.f,0.f,19.f},{0.f,-0.00428f,0.f,0.f,21.f},{0.f,0.f,0.f,0.f,23.f},{0.f,0.f,0.f,1.f,1.f},{0.03157f,0.f,0.f,0.9995f,1.f},{-0.00935f,0.f,0.f,0.99996f,1.f},{0.0055f,-0.01678f,0.67744f,0.73536f,1.f},{0.07374f,0.06806f,0.67342f,0.73242f,13.f},{-0.02385f,0.02728f,0.00065f,0.99934f,1.f},{-0.08962f,0.00903f,0.00081f,0.99594f,13.f},{-0.04256f,-0.01358f,0.0425f,0.9981f,1.f},{-0.04409f,0.00394f,0.04292f,0.9981f,13.f},{0.07374f,-0.06806f,-0.67342f,0.73242f,1.f},{0.0055f,0.01678f,-0.67744f,0.73536f,13.f},{-0.08962f,-0.00903f,-0.00081f,0.99594f,1.f},{-0.02385f,-0.02728f,-0.00065f,0.99934f,13.f},{-0.04409f,-0.00394f,-0.04292f,0.9981f,1.f},{-0.04256f,0.01358f,-0.0425f,0.9981f,13.f},{0.06242f,0.f,0.f,0.99805f,1.f},{-0.00482f,0.f,0.f,0.99959f,3.f},{-0.25293f,0.f,0.f,0.96748f,5.f},{-0.25293f,0.f,0.f,0.96748f,7.f},{-0.24622f,0.f,0.f,0.96921f,9.f},{-0.24622f,0.f,0.f,0.96921f,11.f},{-0.12053f,0.f,0.f,0.99394f,13.f},{-0.09043f,0.f,0.f,0.99587f,15.f},{-0.02205f,0.f,0.f,0.99962f,17.f},{0.05051f,0.f,0.f,0.99962f,19.f},{0.07911f,0.f,0.f,0.99706f,21.f},{0.08542f,0.f,0.f,0.99635f,23.f},{0.25276f,0.f,0.f,0.96753f,1.f},{0.55243f,0.f,0.f,0.84102f,3.f},{0.62282f,0.f,0.f,0.78236f,5.f},{0.38238f,0.f,0.f,0.92164f,7.f},{0.09115f,0.f,0.f,0.99628f,9.f},{0.07281f,0.f,0.f,0.99735f,11.f},{0.07281f,0.f,0.f,0.99735f,13.f},{0.09719f,0.f,0.f,0.99527f,15.f},{0.09719f,0.f,0.f,0.99527f,17.f},{0.07691f,0.f,0.f,0.99704f,19.f},{0.17513f,0.f,0.f,0.98509f,21.f},{0.20553f,0.f,0.f,0.97865f,23.f},{-0.18503f,0.f,0.f,0.98273f,1.f},{0.12619f,0.f,0.f,0.99506f,3.f},{0.02536f,0.f,0.f,0.99943f,5.f},{-0.03385f,0.f,0.f,0.99943f,7.f},{-0.03385f,0.f,0.f,0.99943f,9.f},{-0.03385f,0.f,0.f,0.99943f,11.f},{-0.0429f,0.f,0.f,0.99908f,13.f},{0.03384f,0.f,0.f,0.99943f,15.f},{-0.07949f,0.f,0.f,0.99777f,17.f},{-0.11193f,0.f,0.f,0.9937f,19.f},{-0.15198f,0.f,0.f,0.98838f,21.f},{-0.12377f,0.f,0.f,0.99231f,23.f},{-0.1472f,0.f,0.f,0.98911f,1.f},{-0.0904f,0.f,0.f,0.99519f,3.f},{-0.02189f,0.f,0.f,0.99646f,5.f},{0.05048f,0.f,0.f,0.99962f,7.f},{0.07911f,0.f,0.f,0.99706f,9.f},{0.08542f,0.f,0.f,0.99635f,11.f},{0.05137f,0.f,0.f,0.99868f,13.f},{-0.00482f,0.f,0.f,0.99959f,15.f},{-0.25293f,0.f,0.f,0.96748f,17.f},{-0.25293f,0.f,0.f,0.96748f,19.f},{-0.24622f,0.f,0.f,0.96921f,21.f},{-0.24622f,0.f,0.f,0.96921f,23.f},{0.07281f,0.f,0.f,0.99735f,1.f},{0.09713f,0.f,0.f,0.99513f,3.f},{0.09713f,0.f,0.f,0.9947f,5.f},{0.07691f,0.f,0.f,0.99704f,7.f},{0.15003f,0.f,0.f,0.98868f,9.f},{0.14835f,0.f,0.f,0.98893f,11.f},{0.38019f,0.f,0.f,0.92713f,13.f},{0.54019f,0.f,0.f,0.84465f,15.f},{0.62282f,0.f,0.f,0.78236f,17.f},{0.38238f,0.f,0.f,0.92164f,19.f},{0.09115f,0.f,0.f,0.99628f,21.f},{0.08617f,0.f,0.f,0.99628f,23.f},{-0.0429f,0.f,0.f,0.99908f,1.f},{0.03384f,0.f,0.f,0.99943f,3.f},{-0.07947f,0.f,0.f,0.99748f,5.f},{-0.12242f,0.f,0.f,0.99313f,7.f},{-0.20573f,0.f,0.f,0.97861f,9.f},{-0.11696f,0.f,0.f,0.99314f,11.f},{-0.09968f,0.f,0.f,0.99314f,13.f},{0.12619f,0.f,0.f,0.99201f,15.f},{0.02536f,0.f,0.f,0.99943f,17.f},{-0.03385f,0.f,0.f,0.99943f,19.f},{-0.03385f,0.f,0.f,0.99943f,21.f},{-0.03385f,0.f,0.f,0.99943f,23.f},{0.f,0.f,0.f,0.f,1.f},{0.f,-0.00536f,0.06255f,0.f,3.f},{0.f,-0.09777f,0.136f,0.f,5.f},{0.f,-0.11583f,0.10839f,0.f,7.f},{0.f,-0.04321f,0.16361f,0.f,9.f},{0.f,0.0469f,0.16361f,0.f,11.f},{0.f,0.05729f,0.16361f,0.f,13.f},{0.f,0.f,0.f,1.f,1.f},{0.12494f,0.f,0.f,0.9925f,3.f},{0.25768f,0.f,0.f,0.96599f,5.f},{0.49632f,0.f,0.f,0.8732f,7.f},{0.65771f,0.f,0.f,0.76216f,9.f},{0.69849f,0.f,0.f,0.72317f,11.f},{0.70489f,0.f,0.f,0.70932f,13.f},{0.f,0.f,0.f,1.f,1.f},{0.04362f,0.f,0.f,0.99905f,3.f},{-0.04362f,0.f,0.f,0.99905f,11.f},{0.f,0.f,0.f,1.f,13.f},{0.f,0.f,0.f,1.f,1.f},{0.1532f,0.f,0.f,0.98877f,7.f},{0.17903f,0.f,0.f,0.98384f,9.f},{0.00668f,0.f,0.f,0.99927f,11.f},{-0.03816f,0.f,0.f,0.99927f,13.f},{0.f,0.f,0.f,1.f,1.f},{0.03091f,0.f,0.f,0.99964f,7.f},{0.15347f,0.f,0.f,0.98815f,9.f},{0.06677f,0.f,0.f,0.99777f,11.f},{0.06677f,0.f,0.f,0.99777f,13.f},{0.f,0.f,0.64279f,0.76604f,1.f},{-0.25123f,-0.2994f,0.59886f,0.71369f,3.f},{-0.29681f,-0.35372f,0.57016f,0.67949f,5.f},{-0.18137f,-0.21614f,0.61442f,0.73223f,9.f},{-0.00217f,-0.00259f,0.64034f,0.76313f,11.f},{0.05602f,0.06676f,0.64034f,0.76313f,13.f},{0.f,0.f,0.f,1.f,1.f},{-0.17116f,-0.02927f,-0.00509f,0.98479f,3.f},{-0.11482f,-0.01942f,-0.00223f,0.99323f,9.f},{-0.08597f,-0.01433f,-0.00124f,0.99619f,13.f},{0.f,0.f,0.08716f,0.99619f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,-0.64279f,0.76604f,1.f},{-0.25123f,0.2994f,-0.59886f,0.71369f,3.f},{-0.29681f,0.35372f,-0.57016f,0.67949f,5.f},{-0.18137f,0.21614f,-0.61442f,0.73223f,9.f},{-0.00217f,0.00259f,-0.64034f,0.76313f,11.f},{0.05602f,-0.06676f,-0.64034f,0.76313f,13.f},{0.f,0.f,0.f,1.f,1.f},{-0.17116f,0.02927f,0.00509f,0.98479f,3.f},{-0.11482f,0.01942f,0.00223f,0.99323f,9.f},{-0.08597f,0.01433f,0.00124f,0.99619f,13.f},{0.f,0.f,-0.08716f,0.99619f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{-0.13768f,0.f,0.f,0.99239f,3.f},{-0.25882f,0.f,0.f,0.96593f,5.f},{-0.13622f,0.f,0.f,0.98956f,9.f},{0.f,0.f,0.f,1.f,11.f},{0.f,0.f,0.f,1.f,13.f},{0.f,0.f,0.f,1.f,1.f},{0.12105f,0.f,0.f,0.99323f,3.f},{0.17365f,0.f,0.f,0.98481f,5.f},{0.02241f,0.f,0.f,1.f,9.f},{0.f,0.f,0.f,1.f,11.f},{0.04362f,0.f,0.f,0.99905f,13.f},{0.f,0.f,0.f,1.f,1.f},{0.06063f,0.f,0.f,0.99831f,3.f},{0.08716f,0.f,0.f,0.99619f,5.f},{0.04362f,0.f,0.f,0.99905f,9.f},{0.04362f,0.f,0.f,0.99905f,13.f},{0.f,0.f,0.f,1.f,1.f},{-0.13768f,0.f,0.f,0.99239f,3.f},{-0.25882f,0.f,0.f,0.96593f,5.f},{-0.13622f,0.f,0.f,0.98956f,9.f},{0.f,0.f,0.f,1.f,11.f},{0.f,0.f,0.f,1.f,13.f},{0.f,0.f,0.f,1.f,1.f},{0.12105f,0.f,0.f,0.99323f,3.f},{0.17365f,0.f,0.f,0.98481f,5.f},{0.02241f,0.f,0.f,1.f,9.f},{0.f,0.f,0.f,1.f,11.f},{0.04362f,0.f,0.f,0.99905f,13.f},{0.f,0.f,0.f,1.f,1.f},{0.06063f,0.f,0.f,0.99831f,3.f},{0.08716f,0.f,0.f,0.99619f,5.f},{0.04362f,0.f,0.f,0.99905f,9.f},{0.04362f,0.f,0.f,0.99905f,13.f},{0.f,-0.00361f,0.04517f,0.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.13053f,0.f,0.f,0.99144f,1.f},{-0.04362f,0.f,0.f,0.99905f,1.f},{-0.08716f,0.f,0.f,0.99619f,1.f},{0.13692f,0.10707f,0.57044f,0.80274f,1.f},{-0.73494f,-0.05861f,-0.06405f,0.67255f,1.f},{-0.0414f,-0.30153f,-0.47533f,0.82549f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.13692f,-0.10707f,-0.57044f,0.80274f,1.f},{-0.73494f,0.05861f,0.06405f,0.67255f,1.f},{-0.0414f,0.30153f,0.47533f,0.82549f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{-0.12059f,-0.37941f,-0.04995f,0.91598f,1.f},{0.13053f,0.f,0.f,0.99144f,1.f},{0.f,0.f,0.f,1.f,1.f},{-0.12059f,0.37941f,0.04995f,0.91598f,1.f},{0.13053f,0.f,0.f,0.99144f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,-0.22202f,0.24101f,0.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{-0.0839f,-0.09999f,0.63729f,0.75949f,1.f},{-0.33795f,-0.0526f,-0.01892f,0.9395f,1.f},{0.f,0.f,0.08716f,0.99619f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{-0.0839f,0.09999f,-0.63729f,0.75949f,1.f},{-0.33795f,0.0526f,0.01892f,0.9395f,1.f},{0.f,0.f,-0.08716f,0.99619f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{-0.67495f,-0.03216f,-0.02947f,0.73658f,1.f},{0.67495f,0.03216f,0.02947f,0.73658f,1.f},{0.f,0.f,0.f,1.f,1.f},{-0.67495f,0.03216f,0.02947f,0.73658f,1.f},{0.67495f,-0.03216f,-0.02947f,0.73658f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,0.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.64279f,0.76604f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.08716f,0.99619f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,-0.64279f,0.76604f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,-0.08716f,0.99619f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f},{0.f,0.f,0.f,1.f,1.f}};

    cha_armature_init(p,"armature_body",CHA_ARMATURE_NAME_BODY,gNumBones,gBoneNames,gBoneParents,gBoneSymmetry,gBoneDataPairs);
    cha_armature_add_actions(p,gNumActions,gActionNames,gNumKeyFrames,gKeyFrames,sizeof(gKeyFrames)/sizeof(gKeyFrames[0]),0.f);
    p->actions[CHA_ARMATURE_ACTION_NAME_CYCLE_RUN].looping = p->actions[CHA_ARMATURE_ACTION_NAME_CYCLE_WALK].looping = 1;   // useless line (CYCLE and LOOP inside names should get it automatically)

}

void cha_mesh_init_body(struct cha_mesh* p)  {
/* body */
#define CHA_BODY_NUM_MATERIALS 4
const int gBodyNumMaterials = CHA_BODY_NUM_MATERIALS;
const int gBodyMaterialIdx[CHA_BODY_NUM_MATERIALS] = {4,6,8,5};
#define CHA_BODY_NUM_INDS (168+360+228+408)
const int gBodyNumInds = CHA_BODY_NUM_INDS;
const int gBodyNumIndsPerMaterial[CHA_BODY_NUM_MATERIALS+1] = {0,168,(168+360),(168+360+228),(168+360+228+408)}; /* last must be CHA_BODY_NUM_INDS */
const unsigned short gBodyInds[CHA_BODY_NUM_INDS] = {
    /* matIdx: 4 */ 7,6,1,1,2,7,0,3,2,2,1,0,4,5,6,6,7,4,187,192,68,68,19,187,19,68,69,69,20,19,20,69,70,70,21,20,21,70,71,71,22,21,22,71,193,193,188,22,38,39,3,3,0,38,39,36,4,4,7,39,39,7,2,2,3,39,6,38,0,0,1,6,37,38,6,6,5,37,36,37,5,5,4,36,101,96,95,95,100,101,94,95,96,96,97,94,98,101,100,100,99,98,187,113,162,162,192,187,113,114,163,163,162,113,114,115,164,164,163,114,115,116,165,165,164,115,116,188,193,193,165,116,132,94,97,97,133,132,133,101,98,98,130,133,133,97,96,96,101,133,100,95,94,94,132,100,131,99,100,100,132,131,130,98,99,99,131,130,
    /* matIdx: 6 */ 190,185,15,15,40,190,46,47,51,51,50,46,70,17,41,41,71,70,184,186,18,18,14,184,192,190,40,40,68,192,17,16,47,47,46,17,68,40,16,16,69,68,44,42,43,43,45,44,12,43,42,42,11,12,11,42,15,15,9,11,12,14,18,18,43,12,69,16,17,17,70,69,50,51,55,55,54,50,45,46,50,50,49,45,47,44,48,48,51,47,44,45,49,49,48,44,49,50,54,54,53,49,51,48,52,52,55,51,48,49,53,53,52,48,52,53,57,57,56,52,55,52,56,56,59,55,53,54,58,58,57,53,54,55,59,59,58,54,41,18,186,186,191,41,9,15,185,185,183,9,71,41,191,191,193,71,44,47,16,16,42,44,45,43,17,17,46,45,41,17,43,43,18,41,40,15,42,42,16,40,190,134,109,109,185,190,140,144,145,145,141,140,164,165,135,135,111,164,184,108,112,112,186,184,192,162,134,134,190,192,111,140,141,141,110,111,162,163,110,110,134,162,138,139,137,137,136,138,106,105,136,136,137,106,105,103,109,109,136,105,106,137,112,112,108,106,163,164,111,111,110,163,144,148,149,149,145,144,139,143,144,144,140,139,141,145,142,142,138,141,138,142,143,143,139,138,143,147,148,148,144,143,145,149,146,146,142,145,142,146,147,147,143,142,146,150,151,151,147,146,149,153,150,150,146,149,147,151,152,152,148,147,148,152,153,153,149,148,135,191,186,186,112,135,103,183,185,185,109,103,165,193,191,191,135,165,138,136,110,110,141,138,139,140,111,111,137,139,135,112,137,137,111,135,134,110,136,136,109,134,
    /* matIdx: 8 */ 182,187,19,19,8,182,10,89,20,182,8,13,13,88,182,31,28,32,32,35,31,10,29,89,30,31,35,35,34,30,29,30,34,34,33,29,28,29,33,33,32,28,35,32,36,36,39,35,34,35,39,39,38,34,32,33,37,37,36,32,33,34,38,38,37,33,10,20,21,21,27,10,27,21,22,22,13,27,13,8,28,28,31,13,27,13,31,31,30,27,10,27,30,30,29,10,13,22,188,188,88,13,29,28,89,8,89,28,20,89,19,8,19,89,182,102,113,113,187,182,104,114,195,182,88,107,107,102,182,125,129,126,126,122,125,104,195,123,124,128,129,129,125,124,123,127,128,128,124,123,122,126,127,127,123,122,129,133,130,130,126,129,128,132,133,133,129,128,126,130,131,131,127,126,127,131,132,132,128,127,104,121,115,115,114,104,121,107,116,116,115,121,107,125,122,122,102,107,121,124,125,125,107,121,104,123,124,124,121,104,107,88,188,188,116,107,123,195,122,102,122,195,114,113,195,102,195,113,
    /* matIdx: 5 */ 14,12,25,25,26,14,60,63,75,75,72,60,76,77,67,67,66,76,61,60,72,72,73,61,74,62,81,81,83,74,62,74,75,75,63,62,66,67,64,64,65,66,78,76,66,66,65,78,77,79,64,64,67,77,79,78,65,65,64,79,58,59,75,75,74,58,57,73,72,72,56,57,90,92,77,77,76,90,91,90,76,76,78,91,92,93,79,79,77,92,93,91,78,78,79,93,58,74,73,73,57,58,56,72,75,75,59,56,83,81,85,85,87,83,61,73,82,82,80,61,73,74,83,83,82,73,62,61,80,80,81,62,85,84,86,86,87,85,80,82,86,86,84,80,82,83,87,87,86,82,81,80,84,84,85,81,14,26,194,194,184,14,9,23,24,24,11,9,23,9,183,183,189,23,11,24,25,25,12,11,62,63,92,92,90,62,61,62,90,90,91,61,63,60,93,93,92,63,60,61,91,91,93,60,108,120,119,119,106,108,154,166,169,169,157,154,170,160,161,161,171,170,155,167,166,166,154,155,168,177,175,175,156,168,156,157,169,169,168,156,160,159,158,158,161,160,172,159,160,160,170,172,171,161,158,158,173,171,173,158,159,159,172,173,152,168,169,169,153,152,151,150,166,166,167,151,196,170,171,171,198,196,197,172,170,170,196,197,198,171,173,173,199,198,199,173,172,172,197,199,152,151,167,167,168,152,150,153,169,169,166,150,177,181,179,179,175,177,155,174,176,176,167,155,167,176,177,177,168,167,156,175,174,174,155,156,179,181,180,180,178,179,174,178,180,180,176,174,176,180,181,181,177,176,175,179,178,178,174,175,108,184,194,194,120,108,103,105,118,118,117,103,117,189,183,183,103,117,105,106,119,119,118,105,156,196,198,198,157,156,155,197,196,196,156,155,157,198,199,199,154,157,154,199,197,197,155,154
};
#define CHA_BODY_NUM_VERTS 200
const int gBodyNumVerts = CHA_BODY_NUM_VERTS;
const float gBodyVerts[3*CHA_BODY_NUM_VERTS] = {0.084923f,-0.125747f,0.025959f,0.084923f,-0.125747f,0.000303f,0.032622f,-0.125747f,0.000303f,0.032622f,-0.125747f,0.025959f,0.032622f,0.028694f,0.000303f,0.084923f,0.028694f,0.000303f,0.084923f,-0.025495f,0.000303f,0.032622f,-0.025495f,0.000303f,0.008204f,0.050831f,0.441443f,0.009207f,0.020455f,0.848387f,0.097967f,0.02828f,0.493955f,0.022229f,0.008054f,0.848387f,0.022229f,-0.009484f,0.848387f,0.014329f,-0.046096f,0.441705f,0.009208f,-0.021885f,0.848387f,0.041207f,0.045491f,0.818314f,0.08622f,0.021208f,0.761626f,0.08622f,-0.022638f,0.761626f,0.041207f,-0.044314f,0.818314f,0.052687f,0.054818f,0.526864f,0.092183f,0.027527f,0.525562f,0.091986f,-0.021585f,0.526864f,0.052774f,-0.053641f,0.526864f,0.009208f,0.020806f,0.869139f,0.022229f,0.008405f,0.869139f,0.022229f,-0.009133f,0.869139f,0.009208f,-0.023197f,0.868182f,0.094527f,-0.03407f,0.494588f,0.026832f,0.027797f,0.283923f,0.090331f,0.027797f,0.283923f,0.087195f,-0.039378f,0.283923f,0.029469f,-0.039378f,0.283923f,0.029469f,0.027797f,0.240958f,0.087195f,0.027797f,0.240958f,0.087195f,-0.039378f,0.240958f,0.029469f,-0.039378f,0.240958f,0.032181f,0.02841f,0.054775f,0.084482f,0.02841f,0.054775f,0.084482f,-0.025779f,0.054775f,0.032181f,-0.025779f,0.054775f,0.052686f,0.054818f,0.74971f,0.052687f,-0.053641f,0.74971f,0.073637f,0.021208f,0.841662f,0.073637f,-0.022638f,0.841662f,0.119272f,0.021208f,0.829145f,0.119272f,-0.022638f,0.829145f,0.119272f,-0.022638f,0.776322f,0.119272f,0.021208f,0.776322f,0.251237f,0.021208f,0.829145f,0.251237f,-0.022638f,0.829145f,0.251237f,-0.022638f,0.779019f,0.251237f,0.021208f,0.779019f,0.294202f,0.021208f,0.829145f,0.294202f,-0.022638f,0.829145f,0.294202f,-0.022638f,0.779019f,0.294202f,0.021208f,0.779019f,0.421482f,0.0254f,0.823806f,0.421482f,-0.024132f,0.823806f,0.421482f,-0.024132f,0.784167f,0.421482f,0.0254f,0.784167f,0.456843f,0.0254f,0.81649f,0.456963f,-0.024132f,0.820603f,0.456963f,-0.024132f,0.794988f,0.456843f,0.0254f,0.798209f,0.510669f,0.01698f,0.809973f,0.510669f,-0.015712f,0.811796f,0.510669f,-0.015712f,0.79937f,0.510669f,0.01698f,0.801559f,0.052686f,0.054818f,0.550263f,0.091151f,0.024329f,0.550263f,0.09095f,-0.022571f,0.550263f,0.052683f,-0.053641f,0.550263f,0.429083f,0.0254f,0.812784f,0.429083f,-0.024132f,0.815594f,0.429083f,-0.024132f,0.792571f,0.429083f,0.0254f,0.795747f,0.500314f,-0.024132f,0.796809f,0.500314f,0.0254f,0.80003f,0.500314f,-0.024132f,0.816567f,0.500314f,0.0254f,0.813504f,0.471844f,-0.03447f,0.813973f,0.471844f,-0.03447f,0.797979f,0.467502f,-0.044222f,0.811133f,0.467502f,-0.044222f,0.798079f,0.476093f,-0.038698f,0.8105f,0.476093f,-0.038698f,0.800904f,0.473488f,-0.04455f,0.808796f,0.473488f,-0.04455f,0.800964f,-0.f,-0.046096f,0.441705f,0.057229f,0.050013f,0.478546f,0.482479f,-0.024132f,0.794988f,0.482479f,-0.024132f,0.820603f,0.48243f,0.0254f,0.798209f,0.48243f,0.0254f,0.817108f,-0.084923f,-0.125747f,0.025959f,-0.084923f,-0.125747f,0.000303f,-0.032622f,-0.125747f,0.000303f,-0.032622f,-0.125747f,0.025959f,-0.032622f,0.028694f,0.000303f,-0.084923f,0.028694f,0.000303f,-0.084923f,-0.025495f,0.000303f,-0.032622f,-0.025495f,0.000303f,-0.008204f,0.050831f,0.441443f,-0.009208f,0.020455f,0.848387f,-0.097967f,0.02828f,0.493955f,-0.022229f,0.008054f,0.848387f,-0.022229f,-0.009484f,0.848387f,-0.014329f,-0.046096f,0.441705f,-0.009208f,-0.021885f,0.848387f,-0.041207f,0.045491f,0.818314f,-0.08622f,0.021208f,0.761626f,-0.08622f,-0.022638f,0.761626f,-0.041207f,-0.044314f,0.818314f,-0.052687f,0.054818f,0.526864f,-0.092183f,0.027527f,0.525562f,-0.091986f,-0.021585f,0.526864f,-0.052774f,-0.053641f,0.526864f,-0.009208f,0.020806f,0.869139f,-0.022229f,0.008405f,0.869139f,-0.022229f,-0.009133f,0.869139f,-0.009208f,-0.023197f,0.868182f,-0.094527f,-0.03407f,0.494588f,-0.026832f,0.027797f,0.283923f,-0.090331f,0.027797f,0.283923f,-0.087195f,-0.039378f,0.283923f,-0.029469f,-0.039378f,0.283923f,-0.029469f,0.027797f,0.240958f,-0.087195f,0.027797f,0.240958f,-0.087195f,-0.039378f,0.240958f,-0.029469f,-0.039378f,0.240958f,-0.032181f,0.02841f,0.054775f,-0.084482f,0.02841f,0.054775f,-0.084482f,-0.025779f,0.054775f,-0.032182f,-0.025779f,0.054775f,-0.052686f,0.054818f,0.74971f,-0.052687f,-0.053641f,0.74971f,-0.073638f,0.021208f,0.841662f,-0.073637f,-0.022638f,0.841662f,-0.119272f,0.021208f,0.829145f,-0.119272f,-0.022638f,0.829145f,-0.119272f,-0.022638f,0.776322f,-0.119272f,0.021208f,0.776322f,-0.251237f,0.021208f,0.829145f,-0.251237f,-0.022638f,0.829145f,-0.251237f,-0.022638f,0.779019f,-0.251237f,0.021208f,0.779019f,-0.294202f,0.021208f,0.829145f,-0.294202f,-0.022638f,0.829145f,-0.294202f,-0.022638f,0.779019f,-0.294202f,0.021208f,0.779019f,-0.421482f,0.0254f,0.823806f,-0.421482f,-0.024132f,0.823806f,-0.421482f,-0.024132f,0.784167f,-0.421482f,0.0254f,0.784167f,-0.456843f,0.0254f,0.81649f,-0.456963f,-0.024132f,0.820603f,-0.456963f,-0.024132f,0.794988f,-0.456843f,0.0254f,0.798209f,-0.510669f,0.01698f,0.809973f,-0.510669f,-0.015712f,0.811796f,-0.510669f,-0.015712f,0.79937f,-0.510669f,0.01698f,0.801559f,-0.052686f,0.054818f,0.550263f,-0.091151f,0.024329f,0.550263f,-0.09095f,-0.022571f,0.550263f,-0.052683f,-0.053641f,0.550263f,-0.429083f,0.0254f,0.812784f,-0.429083f,-0.024132f,0.815594f,-0.429083f,-0.024132f,0.792571f,-0.429083f,0.0254f,0.795747f,-0.500314f,-0.024132f,0.796809f,-0.500314f,0.0254f,0.80003f,-0.500314f,-0.024132f,0.816567f,-0.500314f,0.0254f,0.813504f,-0.471844f,-0.03447f,0.813973f,-0.471844f,-0.03447f,0.797979f,-0.467502f,-0.044222f,0.811133f,-0.467502f,-0.044222f,0.798079f,-0.476093f,-0.038698f,0.8105f,-0.476093f,-0.038698f,0.800904f,-0.473488f,-0.04455f,0.808796f,-0.473488f,-0.04455f,0.800964f,-0.f,0.050215f,0.441436f,-0.f,0.020455f,0.848387f,-0.f,-0.021885f,0.848387f,-0.f,0.050672f,0.8119f,-0.f,-0.049495f,0.8119f,-0.f,0.054818f,0.526862f,-0.f,-0.053641f,0.526864f,-0.f,0.020806f,0.869139f,-0.f,0.054818f,0.74971f,-0.f,-0.053641f,0.74971f,-0.f,0.054818f,0.550263f,-0.f,-0.053641f,0.550263f,-0.f,-0.021535f,0.869139f,-0.057229f,0.050013f,0.478546f,-0.482479f,-0.024132f,0.794988f,-0.482479f,-0.024132f,0.820603f,-0.48243f,0.0254f,0.798209f,-0.48243f,0.0254f,0.817108f};
/* 3 bone weights per vertex (if less, a bone index of -1 is used)
   bone indices are in [1,21], because bone[0]='root' is not a 'deform' bone */
struct cha_mesh_vertex_weight gBodyVertexWeights[3*CHA_BODY_NUM_VERTS] = {{18,1.f},{-1,0.f},{-1,0.f},{18,1.f},{-1,0.f},{-1,0.f},{18,1.f},{-1,0.f},{-1,0.f},{18,1.f},{-1,0.f},{-1,0.f},{18,1.f},{-1,0.f},{-1,0.f},{18,1.f},{-1,0.f},{-1,0.f},{18,1.f},{-1,0.f},{-1,0.f},{18,1.f},{-1,0.f},{-1,0.f},{16,0.68206f},{19,0.22468f},{1,0.09326f},{2,1.f},{-1,0.f},{-1,0.f},{16,0.78865f},{1,0.21135f},{-1,0.f},{2,0.94315f},{4,0.05685f},{-1,0.f},{2,0.93968f},{4,0.06032f},{-1,0.f},{16,0.5562f},{19,0.38333f},{1,0.06047f},{2,0.98261f},{4,0.00898f},{1,0.00841f},{2,0.72516f},{1,0.22041f},{4,0.05443f},{1,0.93963f},{2,0.06037f},{-1,0.f},{1,0.94077f},{2,0.05923f},{-1,0.f},{2,0.7177f},{1,0.22027f},{4,0.06203f},{16,0.52025f},{1,0.36053f},{19,0.11922f},{16,0.78083f},{1,0.21917f},{-1,0.f},{16,0.73608f},{1,0.26392f},{-1,0.f},{16,0.60907f},{1,0.39093f},{-1,0.f},{3,1.f},{-1,0.f},{-1,0.f},{3,1.f},{-1,0.f},{-1,0.f},{3,1.f},{-1,0.f},{-1,0.f},{3,1.f},{-1,0.f},{-1,0.f},{16,0.9768f},{1,0.0232f},{-1,0.f},{16,0.93194f},{17,0.06806f},{-1,0.f},{16,0.93301f},{17,0.06699f},{-1,0.f},{16,0.91318f},{17,0.08682f},{-1,0.f},{16,0.90948f},{17,0.09052f},{-1,0.f},{17,0.92751f},{16,0.07249f},{-1,0.f},{17,0.92726f},{16,0.07274f},{-1,0.f},{17,0.89721f},{16,0.10279f},{-1,0.f},{17,0.89835f},{16,0.10165f},{-1,0.f},{18,1.f},{-1,0.f},{-1,0.f},{18,1.f},{-1,0.f},{-1,0.f},{18,1.f},{-1,0.f},{-1,0.f},{18,1.f},{-1,0.f},{-1,0.f},{1,0.84108f},{2,0.08094f},{4,0.07798f},{1,0.85228f},{2,0.07432f},{4,0.07339f},{2,0.74464f},{4,0.16128f},{1,0.09408f},{2,0.74684f},{4,0.15922f},{1,0.09394f},{4,1.f},{-1,0.f},{-1,0.f},{4,1.f},{-1,0.f},{-1,0.f},{4,0.89938f},{1,0.10062f},{-1,0.f},{4,0.59422f},{1,0.40578f},{-1,0.f},{4,0.94143f},{5,0.05857f},{-1,0.f},{4,0.93906f},{5,0.06094f},{-1,0.f},{4,0.934f},{5,0.066f},{-1,0.f},{4,0.93535f},{5,0.06465f},{-1,0.f},{5,0.93911f},{4,0.06089f},{-1,0.f},{5,0.93587f},{4,0.06413f},{-1,0.f},{5,0.93107f},{4,0.06893f},{-1,0.f},{5,0.93238f},{4,0.06762f},{-1,0.f},{5,0.72152f},{6,0.27848f},{-1,0.f},{5,0.706f},{6,0.28491f},{9,0.00909f},{5,0.70807f},{6,0.25878f},{9,0.03315f},{5,0.75777f},{6,0.24223f},{-1,0.f},{6,0.71988f},{5,0.14987f},{7,0.13024f},{6,0.88036f},{7,0.08664f},{5,0.033f},{6,0.80812f},{9,0.17127f},{7,0.0206f},{6,0.72687f},{5,0.15173f},{7,0.1214f},{8,0.85442f},{7,0.14435f},{6,0.00123f},{8,0.85764f},{7,0.12916f},{9,0.0132f},{8,0.8545f},{7,0.1313f},{9,0.01419f},{8,0.85903f},{7,0.14097f},{-1,0.f},{1,0.79963f},{16,0.20037f},{-1,0.f},{1,0.59021f},{16,0.27377f},{19,0.13602f},{1,0.71268f},{16,0.28732f},{-1,0.f},{1,0.53915f},{16,0.46085f},{-1,0.f},{6,0.73072f},{5,0.26073f},{9,0.00855f},{6,0.5339f},{5,0.26525f},{9,0.20086f},{6,0.75514f},{5,0.24486f},{-1,0.f},{6,0.58248f},{5,0.35299f},{9,0.06453f},{8,0.76432f},{7,0.23568f},{-1,0.f},{8,0.70196f},{7,0.24723f},{6,0.05081f},{8,0.6945f},{7,0.23791f},{9,0.06759f},{8,0.71156f},{7,0.23955f},{6,0.04889f},{9,1.f},{-1,0.f},{-1,0.f},{9,1.f},{-1,0.f},{-1,0.f},{9,1.f},{-1,0.f},{-1,0.f},{9,1.f},{-1,0.f},{-1,0.f},{9,1.f},{-1,0.f},{-1,0.f},{9,1.f},{-1,0.f},{-1,0.f},{9,1.f},{-1,0.f},{-1,0.f},{9,1.f},{-1,0.f},{-1,0.f},{19,0.48921f},{16,0.43316f},{1,0.07763f},{16,0.74493f},{1,0.25507f},{-1,0.f},{7,0.76604f},{8,0.23396f},{-1,0.f},{7,0.69938f},{8,0.21614f},{9,0.08448f},{7,0.66024f},{8,0.20098f},{6,0.13878f},{7,0.65471f},{8,0.20426f},{6,0.14103f},{21,1.f},{-1,0.f},{-1,0.f},{21,1.f},{-1,0.f},{-1,0.f},{21,1.f},{-1,0.f},{-1,0.f},{21,1.f},{-1,0.f},{-1,0.f},{21,1.f},{-1,0.f},{-1,0.f},{21,1.f},{-1,0.f},{-1,0.f},{21,1.f},{-1,0.f},{-1,0.f},{21,1.f},{-1,0.f},{-1,0.f},{19,0.68206f},{16,0.22468f},{1,0.09326f},{2,1.f},{-1,0.f},{-1,0.f},{19,0.78865f},{1,0.21135f},{-1,0.f},{2,0.94315f},{10,0.05685f},{-1,0.f},{2,0.93968f},{10,0.06032f},{-1,0.f},{19,0.5562f},{16,0.38333f},{1,0.06047f},{2,0.98261f},{10,0.00898f},{1,0.00841f},{2,0.72516f},{1,0.22041f},{10,0.05443f},{1,0.93963f},{2,0.06037f},{-1,0.f},{1,0.94077f},{2,0.05923f},{-1,0.f},{2,0.7177f},{1,0.22027f},{10,0.06203f},{19,0.52025f},{1,0.36053f},{16,0.11922f},{19,0.78083f},{1,0.21917f},{-1,0.f},{19,0.73608f},{1,0.26392f},{-1,0.f},{19,0.60907f},{1,0.39093f},{-1,0.f},{3,1.f},{-1,0.f},{-1,0.f},{3,1.f},{-1,0.f},{-1,0.f},{3,1.f},{-1,0.f},{-1,0.f},{3,1.f},{-1,0.f},{-1,0.f},{19,0.9768f},{1,0.0232f},{-1,0.f},{19,0.93194f},{20,0.06806f},{-1,0.f},{19,0.93301f},{20,0.06699f},{-1,0.f},{19,0.91318f},{20,0.08682f},{-1,0.f},{19,0.90948f},{20,0.09052f},{-1,0.f},{20,0.92751f},{19,0.07249f},{-1,0.f},{20,0.92726f},{19,0.07274f},{-1,0.f},{20,0.89721f},{19,0.10279f},{-1,0.f},{20,0.89835f},{19,0.10165f},{-1,0.f},{21,1.f},{-1,0.f},{-1,0.f},{21,1.f},{-1,0.f},{-1,0.f},{21,1.f},{-1,0.f},{-1,0.f},{21,1.f},{-1,0.f},{-1,0.f},{1,0.84108f},{2,0.08094f},{10,0.07798f},{1,0.85228f},{2,0.07432f},{10,0.07339f},{2,0.74464f},{10,0.16128f},{1,0.09408f},{2,0.74684f},{10,0.15922f},{1,0.09394f},{10,1.f},{-1,0.f},{-1,0.f},{10,1.f},{-1,0.f},{-1,0.f},{10,0.89938f},{1,0.10062f},{-1,0.f},{10,0.59422f},{1,0.40578f},{-1,0.f},{10,0.94143f},{11,0.05857f},{-1,0.f},{10,0.93906f},{11,0.06094f},{-1,0.f},{10,0.934f},{11,0.066f},{-1,0.f},{10,0.93535f},{11,0.06465f},{-1,0.f},{11,0.93911f},{10,0.06089f},{-1,0.f},{11,0.93587f},{10,0.06413f},{-1,0.f},{11,0.93107f},{10,0.06893f},{-1,0.f},{11,0.93238f},{10,0.06762f},{-1,0.f},{11,0.72152f},{12,0.27848f},{-1,0.f},{11,0.706f},{12,0.28491f},{15,0.00909f},{11,0.70807f},{12,0.25878f},{15,0.03315f},{11,0.75777f},{12,0.24223f},{-1,0.f},{12,0.71988f},{11,0.14987f},{13,0.13024f},{12,0.88036f},{13,0.08664f},{11,0.033f},{12,0.80812f},{15,0.17127f},{13,0.0206f},{12,0.72687f},{11,0.15173f},{13,0.1214f},{14,0.85442f},{13,0.14435f},{12,0.00123f},{14,0.85764f},{13,0.12916f},{15,0.0132f},{14,0.8545f},{13,0.1313f},{15,0.01419f},{14,0.85903f},{13,0.14097f},{-1,0.f},{1,0.79963f},{19,0.20037f},{-1,0.f},{1,0.59021f},{19,0.27377f},{16,0.13602f},{1,0.71268f},{19,0.28732f},{-1,0.f},{1,0.53915f},{19,0.46085f},{-1,0.f},{12,0.73072f},{11,0.26073f},{15,0.00855f},{12,0.5339f},{11,0.26525f},{15,0.20086f},{12,0.75514f},{11,0.24486f},{-1,0.f},{12,0.58248f},{11,0.35299f},{15,0.06453f},{14,0.76432f},{13,0.23568f},{-1,0.f},{14,0.70196f},{13,0.24723f},{12,0.05081f},{14,0.6945f},{13,0.23791f},{15,0.06759f},{14,0.71156f},{13,0.23955f},{12,0.04889f},{15,1.f},{-1,0.f},{-1,0.f},{15,1.f},{-1,0.f},{-1,0.f},{15,1.f},{-1,0.f},{-1,0.f},{15,1.f},{-1,0.f},{-1,0.f},{15,1.f},{-1,0.f},{-1,0.f},{15,1.f},{-1,0.f},{-1,0.f},{15,1.f},{-1,0.f},{-1,0.f},{15,1.f},{-1,0.f},{-1,0.f},{16,0.42887f},{19,0.42887f},{1,0.14227f},{2,1.f},{-1,0.f},{-1,0.f},{2,0.99071f},{1,0.00929f},{-1,0.f},{2,0.74976f},{1,0.2489f},{4,0.00134f},{2,0.77744f},{1,0.22118f},{4,0.00138f},{16,0.35492f},{19,0.35492f},{1,0.29016f},{1,0.63818f},{16,0.18091f},{19,0.18091f},{3,1.f},{-1,0.f},{-1,0.f},{1,0.89982f},{2,0.09576f},{4,0.00442f},{1,0.89937f},{2,0.09787f},{4,0.00275f},{1,1.f},{-1,0.f},{-1,0.f},{1,1.f},{-1,0.f},{-1,0.f},{3,1.f},{-1,0.f},{-1,0.f},{19,0.74493f},{1,0.25507f},{-1,0.f},{13,0.76604f},{14,0.23396f},{-1,0.f},{13,0.69938f},{14,0.21614f},{15,0.08448f},{13,0.66024f},{14,0.20098f},{12,0.13878f},{13,0.65471f},{14,0.20426f},{12,0.14103f}};

#define CHA_BODY_NUM_SHAPEKEYS 1
const int gBodyNumShapeKeys = CHA_BODY_NUM_SHAPEKEYS;
const char* gBodyShapeKeyNames[CHA_BODY_NUM_SHAPEKEYS] = {"woman"};
const float gBodyShapeKeyVerts[CHA_BODY_NUM_SHAPEKEYS][3*CHA_BODY_NUM_VERTS] = {
    /* woman */ {0.084923f,-0.125747f,0.025959f,0.084923f,-0.125747f,0.000303f,0.032622f,-0.125747f,0.000303f,0.032622f,-0.125747f,0.025959f,0.032622f,0.028694f,0.000303f,0.084923f,0.028694f,0.000303f,0.084923f,-0.025495f,0.000303f,0.032622f,-0.025495f,0.000303f,0.008204f,0.054792f,0.441443f,0.009207f,0.020455f,0.848387f,0.099436f,0.02828f,0.493955f,0.022229f,0.008054f,0.848387f,0.022229f,-0.009484f,0.848387f,0.014329f,-0.046096f,0.441705f,0.009208f,-0.021885f,0.848387f,0.041207f,0.045491f,0.818314f,0.08622f,0.021208f,0.761626f,0.08622f,-0.022638f,0.761626f,0.041207f,-0.044314f,0.818314f,0.052687f,0.062844f,0.526864f,0.098244f,0.033927f,0.525562f,0.098034f,-0.027462f,0.526864f,0.052774f,-0.056141f,0.526864f,0.009208f,0.020806f,0.869139f,0.022229f,0.008405f,0.869139f,0.022229f,-0.009133f,0.869139f,0.009208f,-0.023197f,0.868182f,0.095945f,-0.03407f,0.494588f,0.026832f,0.027797f,0.283923f,0.090331f,0.027797f,0.283923f,0.087195f,-0.039378f,0.283923f,0.029469f,-0.039378f,0.283923f,0.029469f,0.027797f,0.240958f,0.087195f,0.027797f,0.240958f,0.087195f,-0.039378f,0.240958f,0.029469f,-0.039378f,0.240958f,0.032181f,0.02841f,0.054775f,0.084482f,0.02841f,0.054775f,0.084482f,-0.025779f,0.054775f,0.032181f,-0.025779f,0.054775f,0.052686f,0.054818f,0.74971f,0.052687f,-0.083641f,0.74971f,0.073637f,0.021208f,0.841662f,0.073637f,-0.022638f,0.841662f,0.119272f,0.021208f,0.829145f,0.119272f,-0.022638f,0.829145f,0.119272f,-0.022638f,0.776322f,0.119272f,0.021208f,0.776322f,0.251237f,0.021208f,0.829145f,0.251237f,-0.022638f,0.829145f,0.251237f,-0.022638f,0.779019f,0.251237f,0.021208f,0.779019f,0.294202f,0.021208f,0.829145f,0.294202f,-0.022638f,0.829145f,0.294202f,-0.022638f,0.779019f,0.294202f,0.021208f,0.779019f,0.421482f,0.0254f,0.823806f,0.421482f,-0.024132f,0.823806f,0.421482f,-0.024132f,0.784167f,0.421482f,0.0254f,0.784167f,0.456843f,0.0254f,0.81649f,0.456963f,-0.024132f,0.820603f,0.456963f,-0.024132f,0.794988f,0.456843f,0.0254f,0.798209f,0.510669f,0.01698f,0.809973f,0.510669f,-0.015712f,0.811796f,0.510669f,-0.015712f,0.79937f,0.510669f,0.01698f,0.801559f,0.052607f,0.062218f,0.550263f,0.094573f,0.029889f,0.550263f,0.094365f,-0.028648f,0.550263f,0.052604f,-0.056053f,0.550263f,0.429083f,0.0254f,0.812784f,0.429083f,-0.024132f,0.815594f,0.429083f,-0.024132f,0.792571f,0.429083f,0.0254f,0.795747f,0.500314f,-0.024132f,0.796809f,0.500314f,0.0254f,0.80003f,0.500314f,-0.024132f,0.816567f,0.500314f,0.0254f,0.813504f,0.471844f,-0.03447f,0.813973f,0.471844f,-0.03447f,0.797979f,0.467502f,-0.044222f,0.811133f,0.467502f,-0.044222f,0.798079f,0.476093f,-0.038698f,0.8105f,0.476093f,-0.038698f,0.800904f,0.473488f,-0.04455f,0.808796f,0.473488f,-0.04455f,0.800964f,-0.f,-0.046096f,0.441705f,0.057229f,0.050013f,0.478546f,0.482479f,-0.024132f,0.794988f,0.482479f,-0.024132f,0.820603f,0.48243f,0.0254f,0.798209f,0.48243f,0.0254f,0.817108f,-0.084923f,-0.125747f,0.025959f,-0.084923f,-0.125747f,0.000303f,-0.032622f,-0.125747f,0.000303f,-0.032622f,-0.125747f,0.025959f,-0.032622f,0.028694f,0.000303f,-0.084923f,0.028694f,0.000303f,-0.084923f,-0.025495f,0.000303f,-0.032622f,-0.025495f,0.000303f,-0.008204f,0.054792f,0.441443f,-0.009208f,0.020455f,0.848387f,-0.099436f,0.02828f,0.493955f,-0.022229f,0.008054f,0.848387f,-0.022229f,-0.009484f,0.848387f,-0.014329f,-0.046096f,0.441705f,-0.009208f,-0.021885f,0.848387f,-0.041207f,0.045491f,0.818314f,-0.08622f,0.021208f,0.761626f,-0.08622f,-0.022638f,0.761626f,-0.041207f,-0.044314f,0.818314f,-0.052687f,0.062844f,0.526864f,-0.098244f,0.033927f,0.525562f,-0.098034f,-0.027462f,0.526864f,-0.052774f,-0.056141f,0.526864f,-0.009208f,0.020806f,0.869139f,-0.022229f,0.008405f,0.869139f,-0.022229f,-0.009133f,0.869139f,-0.009208f,-0.023197f,0.868182f,-0.095945f,-0.03407f,0.494588f,-0.026832f,0.027797f,0.283923f,-0.090331f,0.027797f,0.283923f,-0.087195f,-0.039378f,0.283923f,-0.029469f,-0.039378f,0.283923f,-0.029469f,0.027797f,0.240958f,-0.087195f,0.027797f,0.240958f,-0.087195f,-0.039378f,0.240958f,-0.029469f,-0.039378f,0.240958f,-0.032181f,0.02841f,0.054775f,-0.084482f,0.02841f,0.054775f,-0.084482f,-0.025779f,0.054775f,-0.032182f,-0.025779f,0.054775f,-0.052686f,0.054818f,0.74971f,-0.052687f,-0.083641f,0.74971f,-0.073638f,0.021208f,0.841662f,-0.073637f,-0.022638f,0.841662f,-0.119272f,0.021208f,0.829145f,-0.119272f,-0.022638f,0.829145f,-0.119272f,-0.022638f,0.776322f,-0.119272f,0.021208f,0.776322f,-0.251237f,0.021208f,0.829145f,-0.251237f,-0.022638f,0.829145f,-0.251237f,-0.022638f,0.779019f,-0.251237f,0.021208f,0.779019f,-0.294202f,0.021208f,0.829145f,-0.294202f,-0.022638f,0.829145f,-0.294202f,-0.022638f,0.779019f,-0.294202f,0.021208f,0.779019f,-0.421482f,0.0254f,0.823806f,-0.421482f,-0.024132f,0.823806f,-0.421482f,-0.024132f,0.784167f,-0.421482f,0.0254f,0.784167f,-0.456843f,0.0254f,0.81649f,-0.456963f,-0.024132f,0.820603f,-0.456963f,-0.024132f,0.794988f,-0.456843f,0.0254f,0.798209f,-0.510669f,0.01698f,0.809973f,-0.510669f,-0.015712f,0.811796f,-0.510669f,-0.015712f,0.79937f,-0.510669f,0.01698f,0.801559f,-0.052607f,0.062218f,0.550263f,-0.094573f,0.029889f,0.550263f,-0.094365f,-0.028648f,0.550263f,-0.052604f,-0.056053f,0.550263f,-0.429083f,0.0254f,0.812784f,-0.429083f,-0.024132f,0.815594f,-0.429083f,-0.024132f,0.792571f,-0.429083f,0.0254f,0.795747f,-0.500314f,-0.024132f,0.796809f,-0.500314f,0.0254f,0.80003f,-0.500314f,-0.024132f,0.816567f,-0.500314f,0.0254f,0.813504f,-0.471844f,-0.03447f,0.813973f,-0.471844f,-0.03447f,0.797979f,-0.467502f,-0.044222f,0.811133f,-0.467502f,-0.044222f,0.798079f,-0.476093f,-0.038698f,0.8105f,-0.476093f,-0.038698f,0.800904f,-0.473488f,-0.04455f,0.808796f,-0.473488f,-0.04455f,0.800964f,0.f,0.054792f,0.441436f,-0.f,0.020455f,0.848387f,-0.f,-0.021885f,0.848387f,-0.f,0.050672f,0.8119f,-0.f,-0.049495f,0.8119f,0.f,0.06728f,0.526862f,0.f,-0.058641f,0.526864f,-0.f,0.020806f,0.869139f,-0.f,0.054818f,0.74971f,0.f,-0.075641f,0.74971f,0.f,0.066648f,0.550263f,0.f,-0.05855f,0.550263f,-0.f,-0.021535f,0.869139f,-0.057229f,0.050013f,0.478546f,-0.482479f,-0.024132f,0.794988f,-0.482479f,-0.024132f,0.820603f,-0.48243f,0.0254f,0.798209f,-0.48243f,0.0254f,0.817108f}
};
#undef CHA_BODY_NUM_SHAPEKEYS
#undef CHA_BODY_NUM_VERTS
#undef CHA_BODY_NUM_INDS
#undef CHA_BODY_NUM_MATERIALS

//int i;
cha_mesh_init(p,"body",CHA_MESH_NAME_BODY,gBodyVerts,gBodyNumVerts,gBodyInds,gBodyNumInds);
cha_mesh_add_mesh_parts(p,gBodyNumMaterials,gBodyMaterialIdx,gBodyNumIndsPerMaterial);
cha_mesh_add_armature_weights(p,CHA_ARMATURE_NAME_BODY,gBodyVertexWeights,3*gBodyNumVerts);
cha_mesh_add_shape_keys(p,gBodyNumShapeKeys,gBodyShapeKeyNames,&gBodyShapeKeyVerts[0][0]);

}

void cha_mesh_init_head(struct cha_mesh* p) {
/* head */
#define CHA_HEAD_NUM_MATERIALS 2
const int gHeadNumMaterials = CHA_HEAD_NUM_MATERIALS;
const int gHeadMaterialIdx[CHA_HEAD_NUM_MATERIALS] = {0,5};
#define CHA_HEAD_NUM_INDS (396+420)
const int gHeadNumInds = CHA_HEAD_NUM_INDS;
const int gHeadNumIndsPerMaterial[CHA_HEAD_NUM_MATERIALS+1] = {0,396,(396+420)}; /* last must be CHA_HEAD_NUM_INDS */
const unsigned short gHeadInds[CHA_HEAD_NUM_INDS] = {
    /* matIdx: 0 */ 64,14,15,63,13,14,62,12,13,60,12,61,59,11,60,15,20,21,14,19,20,12,19,13,11,18,12,10,17,11,20,27,21,20,25,26,18,25,19,18,23,24,16,23,17,26,33,27,26,31,32,25,30,31,23,30,24,22,29,23,29,36,30,29,34,35,35,40,41,41,46,47,47,108,109,59,65,10,10,65,16,16,65,22,22,65,28,28,65,34,34,65,40,40,65,46,46,65,108,0,15,21,64,0,8,0,21,1,1,21,27,1,27,33,64,70,63,70,62,63,69,61,62,68,60,61,67,59,60,71,76,70,70,75,69,75,68,69,74,67,68,73,66,67,83,76,77,76,81,75,81,74,75,80,73,74,79,72,73,83,88,82,82,87,81,81,86,80,86,79,80,85,78,79,31,30,36,86,91,85,85,90,84,36,35,41,91,96,90,97,102,96,103,108,102,59,66,65,66,72,65,72,78,65,78,84,65,84,90,65,90,96,65,96,102,65,102,108,65,4,77,71,4,64,8,4,5,77,5,83,77,5,89,83,92,97,91,87,92,86,64,63,14,63,62,13,62,61,12,60,11,12,59,10,11,15,14,20,14,13,19,12,18,19,11,17,18,10,16,17,20,26,27,20,19,25,18,24,25,18,17,23,16,22,23,26,32,33,26,25,31,25,24,30,23,29,30,22,28,29,29,35,36,29,28,34,35,34,40,41,40,46,47,46,108,64,15,0,64,71,70,70,69,62,69,68,61,68,67,60,67,66,59,71,77,76,70,76,75,75,74,68,74,73,67,73,72,66,83,82,76,76,82,81,81,80,74,80,79,73,79,78,72,83,89,88,82,88,87,81,87,86,86,85,79,85,84,78,86,92,91,85,91,90,91,97,96,97,103,102,103,109,108,4,71,64,
    /* matIdx: 5 */ 32,39,33,31,37,32,38,32,37,38,45,39,37,44,38,36,37,31,101,136,100,49,44,43,98,103,97,52,55,53,47,110,48,58,113,124,119,56,111,121,55,57,112,55,117,56,54,111,53,50,52,54,57,52,121,56,119,45,51,58,2,1,33,45,2,39,2,33,39,3,124,9,95,88,89,41,42,36,101,94,95,100,93,94,98,93,99,136,106,100,100,105,99,93,98,92,114,118,122,110,103,104,123,113,107,119,111,120,121,118,117,112,118,115,120,111,116,115,114,106,116,122,120,120,121,119,123,107,101,6,89,5,101,95,6,6,95,89,7,124,123,139,49,141,105,129,126,110,104,129,125,129,104,126,129,125,99,130,98,104,98,130,105,130,99,105,126,130,126,125,130,104,130,125,111,54,141,110,129,48,127,48,129,128,127,129,49,128,129,49,43,131,43,42,131,48,131,42,49,131,128,128,131,127,48,127,131,103,98,104,42,41,47,47,48,42,37,36,42,42,43,37,97,92,98,92,87,93,94,93,88,87,88,93,113,132,107,136,132,106,106,132,115,113,135,132,135,134,132,113,51,133,136,107,132,50,53,133,53,134,133,135,133,134,133,135,113,107,136,101,133,51,137,45,137,51,45,44,137,50,137,44,133,137,50,115,134,112,111,140,116,141,54,139,114,138,106,116,138,114,105,106,138,140,105,138,52,50,139,54,52,139,140,138,116,49,139,50,129,111,141,111,129,140,105,140,129,49,129,141,32,38,39,38,44,45,37,43,44,49,50,44,52,57,55,47,109,110,58,51,113,121,117,55,112,53,55,54,56,57,121,57,56,58,3,45,3,2,45,3,58,124,95,94,88,101,100,94,100,99,93,100,106,105,114,115,118,110,109,103,123,124,113,121,122,118,112,117,118,116,114,122,120,122,121,6,7,101,7,123,101,7,9,124,53,112,134,115,132,134
};
#define CHA_HEAD_NUM_VERTS 142
const int gHeadNumVerts = CHA_HEAD_NUM_VERTS;
const float gHeadVerts[3*CHA_HEAD_NUM_VERTS] = {0.009208f,0.020115f,-0.063137f,0.022229f,0.007713f,-0.063137f,0.022229f,-0.009825f,-0.063137f,0.009208f,-0.023889f,-0.064093f,-0.009208f,0.020115f,-0.063137f,-0.022229f,0.007713f,-0.063137f,-0.022229f,-0.009825f,-0.063137f,-0.009208f,-0.023889f,-0.064093f,-0.f,0.020115f,-0.063137f,-0.f,-0.022226f,-0.063137f,0.008389f,0.020264f,0.063959f,0.015502f,0.037434f,0.049306f,0.020254f,0.048907f,0.027376f,0.021923f,0.052936f,0.001507f,0.020254f,0.048907f,-0.028404f,0.015502f,0.037434f,-0.046293f,0.015502f,0.015511f,0.063959f,0.028643f,0.028653f,0.049306f,0.037424f,0.037434f,0.027376f,0.040508f,0.040517f,0.001507f,0.037424f,0.037434f,-0.028404f,0.028643f,0.028653f,-0.046293f,0.020254f,0.008399f,0.063959f,0.037424f,0.015511f,0.049306f,0.048897f,0.020264f,0.027376f,0.052926f,0.021932f,0.001507f,0.048897f,0.020264f,-0.028404f,0.037424f,0.015511f,-0.046293f,0.021923f,0.00001f,0.063959f,0.040508f,0.00001f,0.049306f,0.052926f,0.00001f,0.027376f,0.057287f,0.00001f,0.001507f,0.052926f,0.00001f,-0.028404f,0.040508f,0.00001f,-0.046293f,0.020254f,-0.00838f,0.063959f,0.037424f,-0.015492f,0.049306f,0.048897f,-0.020244f,0.027376f,0.052926f,-0.021913f,0.001507f,0.048897f,-0.020244f,-0.028404f,0.037424f,-0.015492f,-0.046293f,0.015502f,-0.015492f,0.063959f,0.028643f,-0.028634f,0.049306f,0.037424f,-0.039544f,0.027376f,0.040508f,-0.042627f,0.001507f,0.037424f,-0.037415f,-0.028404f,0.028643f,-0.028634f,-0.046293f,0.008389f,-0.020244f,0.063959f,0.015502f,-0.037415f,0.049306f,0.020254f,-0.050714f,0.027376f,0.021923f,-0.052917f,0.001507f,0.020723f,-0.049049f,-0.032035f,0.015502f,-0.044917f,-0.048658f,0.01123f,-0.052454f,-0.028327f,0.010234f,-0.049568f,-0.03123f,0.008835f,-0.053f,-0.011428f,0.009128f,-0.06209f,-0.025227f,0.007292f,-0.062472f,-0.011428f,0.010336f,-0.064722f,-0.022416f,0.012355f,-0.03938f,-0.055399f,-0.f,0.021932f,0.063959f,-0.f,0.040518f,0.049306f,-0.f,0.052936f,0.027376f,-0.f,0.057296f,0.001507f,-0.f,0.052936f,-0.028404f,-0.f,0.040517f,-0.046293f,-0.f,0.00001f,0.069105f,-0.008389f,0.020264f,0.063959f,-0.015502f,0.037434f,0.049306f,-0.020254f,0.048907f,0.027376f,-0.021923f,0.052936f,0.001507f,-0.020254f,0.048907f,-0.028404f,-0.015502f,0.037434f,-0.046293f,-0.015502f,0.015511f,0.063959f,-0.028643f,0.028653f,0.049306f,-0.037424f,0.037434f,0.027376f,-0.040508f,0.040517f,0.001507f,-0.037424f,0.037434f,-0.028404f,-0.028643f,0.028653f,-0.046293f,-0.020254f,0.008399f,0.063959f,-0.037424f,0.015511f,0.049306f,-0.048897f,0.020264f,0.027376f,-0.052926f,0.021932f,0.001507f,-0.048897f,0.020264f,-0.028404f,-0.037424f,0.015511f,-0.046293f,-0.021923f,0.00001f,0.063959f,-0.040508f,0.00001f,0.049306f,-0.052926f,0.00001f,0.027376f,-0.057287f,0.00001f,0.001507f,-0.052926f,0.00001f,-0.028404f,-0.040508f,0.00001f,-0.046293f,-0.020254f,-0.00838f,0.063959f,-0.037424f,-0.015492f,0.049306f,-0.048897f,-0.020244f,0.027376f,-0.052926f,-0.021913f,0.001507f,-0.048897f,-0.020244f,-0.028404f,-0.037424f,-0.015492f,-0.046293f,-0.015502f,-0.015492f,0.063959f,-0.028643f,-0.028634f,0.049306f,-0.037424f,-0.039544f,0.027376f,-0.040508f,-0.042627f,0.001507f,-0.037424f,-0.037415f,-0.028404f,-0.028643f,-0.028634f,-0.046293f,-0.008389f,-0.020244f,0.063959f,-0.015502f,-0.037415f,0.049306f,-0.020254f,-0.050714f,0.027376f,-0.021923f,-0.052917f,0.001507f,-0.020723f,-0.049049f,-0.032035f,-0.015502f,-0.044917f,-0.048658f,-0.f,-0.021913f,0.063959f,-0.f,-0.040498f,0.049306f,-0.f,-0.051683f,0.027376f,-0.f,-0.057277f,0.001507f,-0.f,-0.048891f,-0.03126f,-0.f,-0.047969f,-0.050219f,-0.01123f,-0.052454f,-0.028327f,-0.010234f,-0.049568f,-0.03123f,-0.008835f,-0.053f,-0.011428f,-0.f,-0.063098f,-0.025227f,-0.009128f,-0.06209f,-0.025227f,-0.f,-0.063714f,-0.011428f,-0.007292f,-0.062472f,-0.011428f,-0.f,-0.065822f,-0.022416f,-0.010336f,-0.064722f,-0.022416f,-0.012355f,-0.03938f,-0.055399f,-0.f,-0.040922f,-0.055399f,-0.019483f,-0.052454f,0.02252f,-0.017789f,-0.052454f,0.005557f,0.019483f,-0.052454f,0.02252f,0.017789f,-0.052454f,0.005557f,-0.f,-0.052454f,0.012862f,-0.030381f,-0.052454f,0.012862f,0.030381f,-0.052454f,0.012862f,-0.015445f,-0.048503f,-0.041408f,0.015445f,-0.048503f,-0.041408f,-0.f,-0.048503f,-0.0362f,-0.f,-0.048503f,-0.047337f,-0.022888f,-0.046395f,-0.039487f,0.022888f,-0.046395f,-0.039487f,-0.016721f,-0.053501f,-0.017839f,0.016721f,-0.053501f,-0.017839f,-0.010961f,-0.055097f,0.001507f,0.010961f,-0.055097f,0.001507f};
#define CHA_HEAD_NUM_SHAPEKEYS 1
const int gHeadNumShapeKeys = CHA_HEAD_NUM_SHAPEKEYS;
const char* gHeadShapeKeyNames[CHA_HEAD_NUM_SHAPEKEYS] = {"woman"};
const float gHeadShapeKeyVerts[CHA_HEAD_NUM_SHAPEKEYS][3*CHA_HEAD_NUM_VERTS] = {
    /* woman */  {0.009208f,0.020115f,-0.063137f,0.022229f,0.007713f,-0.063137f,0.022229f,-0.009825f,-0.063137f,0.009208f,-0.023889f,-0.064093f,-0.009208f,0.020115f,-0.063137f,-0.022229f,0.007713f,-0.063137f,-0.022229f,-0.009825f,-0.063137f,-0.009208f,-0.023889f,-0.064093f,0.f,0.020115f,-0.063137f,0.f,-0.022226f,-0.063137f,0.009228f,0.020427f,0.067775f,0.015502f,0.037434f,0.049306f,0.020254f,0.051709f,0.022376f,0.021923f,0.055387f,-0.008493f,0.021021f,0.05521f,-0.050991f,0.030693f,0.049341f,-0.102969f,0.017052f,0.0152f,0.067775f,0.028643f,0.028653f,0.049306f,0.037424f,0.040236f,0.022376f,0.040508f,0.042969f,-0.008493f,0.04661f,0.043737f,-0.050991f,0.045371f,0.04056f,-0.099759f,0.022279f,0.007376f,0.067775f,0.041167f,0.0152f,0.051656f,0.057982f,0.023229f,0.022533f,0.064041f,0.024714f,-0.010923f,0.060807f,0.027116f,-0.044514f,0.053517f,0.026873f,-0.078944f,0.026307f,0.00001f,0.067375f,0.048609f,0.00001f,0.049791f,0.061232f,0.00001f,0.023475f,0.057287f,0.00001f,0.001507f,0.052926f,0.00001f,-0.028404f,0.040508f,0.00001f,-0.046293f,0.020254f,-0.00838f,0.063959f,0.037424f,-0.015492f,0.049306f,0.048897f,-0.020244f,0.027376f,0.052926f,-0.021913f,0.001507f,0.048897f,-0.020244f,-0.028404f,0.037424f,-0.015492f,-0.046293f,0.015502f,-0.015492f,0.063959f,0.032694f,-0.026956f,0.04492f,0.037424f,-0.039544f,0.027376f,0.040508f,-0.042627f,0.001507f,0.037424f,-0.037415f,-0.028404f,0.028643f,-0.028634f,-0.046293f,0.008389f,-0.020244f,0.063959f,0.015977f,-0.038745f,0.047113f,0.020254f,-0.050714f,0.027376f,0.021923f,-0.052917f,0.001507f,0.020723f,-0.049049f,-0.032035f,0.015502f,-0.044917f,-0.048658f,0.01123f,-0.052454f,-0.028327f,0.010234f,-0.049568f,-0.03123f,0.008835f,-0.053f,-0.011428f,0.009128f,-0.06209f,-0.025227f,0.007292f,-0.062472f,-0.011428f,0.010336f,-0.064722f,-0.022416f,0.012355f,-0.03938f,-0.055399f,0.f,0.022263f,0.067775f,0.f,0.040518f,0.049306f,0.f,0.055737f,0.022376f,0.f,0.059748f,-0.008493f,0.f,0.059239f,-0.050991f,0.f,0.052424f,-0.107055f,0.f,0.00001f,0.07058f,-0.009228f,0.020427f,0.067775f,-0.015502f,0.037434f,0.049306f,-0.020254f,0.051709f,0.022376f,-0.021923f,0.055387f,-0.008493f,-0.021021f,0.05521f,-0.050991f,-0.030693f,0.049341f,-0.102969f,-0.017052f,0.0152f,0.067775f,-0.028643f,0.028653f,0.049306f,-0.037424f,0.040236f,0.022376f,-0.040508f,0.042969f,-0.008493f,-0.04661f,0.043737f,-0.050991f,-0.045371f,0.04056f,-0.099759f,-0.022279f,0.007376f,0.067775f,-0.041167f,0.0152f,0.051656f,-0.057982f,0.023229f,0.022533f,-0.064041f,0.024714f,-0.010923f,-0.060807f,0.027116f,-0.044514f,-0.053517f,0.026873f,-0.078944f,-0.026307f,0.00001f,0.067375f,-0.048609f,0.00001f,0.049791f,-0.061232f,0.00001f,0.023475f,-0.057287f,0.00001f,0.001507f,-0.052926f,0.00001f,-0.028404f,-0.040508f,0.00001f,-0.046293f,-0.020254f,-0.00838f,0.063959f,-0.037424f,-0.015492f,0.049306f,-0.048897f,-0.020244f,0.027376f,-0.052926f,-0.021913f,0.001507f,-0.048897f,-0.020244f,-0.028404f,-0.037424f,-0.015492f,-0.046293f,-0.015502f,-0.015492f,0.063959f,-0.0304f,-0.030816f,0.04492f,-0.037424f,-0.039544f,0.027376f,-0.040508f,-0.042627f,0.001507f,-0.037424f,-0.037415f,-0.028404f,-0.028643f,-0.028634f,-0.046293f,-0.008389f,-0.020244f,0.063959f,-0.015977f,-0.038745f,0.047113f,-0.020254f,-0.050714f,0.027376f,-0.021923f,-0.052917f,0.001507f,-0.020723f,-0.049049f,-0.032035f,-0.015502f,-0.044917f,-0.048658f,0.f,-0.021913f,0.063959f,0.f,-0.042735f,0.04492f,0.f,-0.051683f,0.027376f,0.f,-0.057277f,0.001507f,0.f,-0.048891f,-0.03126f,0.f,-0.047969f,-0.050219f,-0.01123f,-0.052454f,-0.028327f,-0.010234f,-0.049568f,-0.03123f,-0.008835f,-0.053f,-0.011428f,0.f,-0.063098f,-0.025227f,-0.009128f,-0.06209f,-0.025227f,0.f,-0.063714f,-0.011428f,-0.007292f,-0.062472f,-0.011428f,0.f,-0.065822f,-0.022416f,-0.010336f,-0.064722f,-0.022416f,-0.012355f,-0.03938f,-0.055399f,0.f,-0.040922f,-0.055399f,-0.019483f,-0.052454f,0.02252f,-0.017789f,-0.052454f,0.005557f,0.019483f,-0.052454f,0.02252f,0.017789f,-0.052454f,0.005557f,0.f,-0.052454f,0.012862f,-0.030381f,-0.052454f,0.012862f,0.030381f,-0.052454f,0.012862f,-0.015445f,-0.048503f,-0.041408f,0.015445f,-0.048503f,-0.041408f,0.f,-0.048503f,-0.0362f,0.f,-0.048503f,-0.047337f,-0.022888f,-0.046395f,-0.039487f,0.022888f,-0.046395f,-0.039487f,-0.016721f,-0.053501f,-0.017839f,0.016721f,-0.053501f,-0.017839f,-0.010961f,-0.055097f,0.001507f,0.010961f,-0.055097f,0.001507f}
};
#undef CHA_HEAD_NUM_SHAPEKEYS
#undef CHA_HEAD_NUM_VERTS
#undef CHA_HEAD_NUM_INDS
#undef CHA_HEAD_NUM_MATERIALS

//int i;
float parent_offset_matrix[16] = {1.f,0.f,0.f,0.f,    0.f,1.f,0.f,0.f,    0.f,0.f,1.f,0.f,    0.f,0.f,0.f,1.f};
cha_mesh_init(p,"head",CHA_MESH_NAME_HEAD,gHeadVerts,gHeadNumVerts,gHeadInds,gHeadNumInds);
cha_mesh_add_mesh_parts(p,gHeadNumMaterials,gHeadMaterialIdx,gHeadNumIndsPerMaterial);
cha_mesh_add_shape_keys(p,gHeadNumShapeKeys,gHeadShapeKeyNames,&gHeadShapeKeyVerts[0][0]);
chm_Mat4Rotatef(parent_offset_matrix,-90.f,1.f,0.f,0.f);
cha_mesh_set_parent_bone(p,CHA_MESH_NAME_BODY,CHA_BONE_NAME_NECK_HEAD,parent_offset_matrix,NULL);
}



void cha_mesh_init_mouth(struct cha_mesh* p)    {
/* mouth */
#define CHA_MOUTH_NUM_MATERIALS 2
const int gMouthNumMaterials = CHA_MOUTH_NUM_MATERIALS;
const int gMouthMaterialIdx[CHA_MOUTH_NUM_MATERIALS] = {2,7};
#define CHA_MOUTH_NUM_INDS (156+30)
const int gMouthNumInds = CHA_MOUTH_NUM_INDS;
const int gMouthNumIndsPerMaterial[CHA_MOUTH_NUM_MATERIALS+1] = {0,156,(156+30)}; /* last must be CHA_MOUTH_NUM_INDS */
const unsigned short gMouthInds[CHA_MOUTH_NUM_INDS] = {/* matIdx: 2 */ 0,1,3,3,2,0,4,2,3,3,5,4,5,3,33,4,5,7,7,6,4,8,6,7,7,9,8,9,7,32,8,9,11,11,10,8,10,11,13,13,12,10,12,13,15,15,14,12,16,14,15,15,17,16,17,15,34,16,17,19,19,18,16,20,18,19,19,21,20,21,19,35,20,21,23,23,22,20,22,23,1,1,0,22,9,25,27,27,11,9,13,11,27,27,28,13,15,13,28,28,30,15,23,21,31,31,29,23,1,23,29,29,26,1,1,26,24,24,3,1,30,37,34,34,15,30,34,35,19,19,17,34,35,37,31,31,21,35,3,24,36,36,33,3,32,36,25,25,9,32,33,32,7,7,5,33,
                                   /* matIdx: 7 */ 4,2,0,0,6,4,6,0,22,22,8,6,8,22,20,20,10,8,10,20,18,18,12,10,12,18,16,16,14,12};
#define CHA_MOUTH_NUM_VERTS 38
const int gMouthNumVerts = CHA_MOUTH_NUM_VERTS;
const float gMouthVerts[3*CHA_MOUTH_NUM_VERTS] = {0.004448f,0.001341f,0.001753f,0.004448f,-0.000719f,0.001795f,0.012152f,0.001371f,0.001526f,0.012152f,-0.00069f,0.001559f,0.0166f,0.001401f,0.000656f,0.0166f,-0.000661f,0.000678f,0.0166f,0.00142f,-0.000691f,0.0166f,-0.000641f,-0.000668f,0.012152f,0.001449f,-0.001571f,0.012152f,-0.000612f,-0.001538f,0.004448f,0.001478f,-0.001808f,0.004448f,-0.000582f,-0.001765f,-0.004448f,0.001478f,-0.001808f,-0.004448f,-0.000582f,-0.001765f,-0.012152f,0.001449f,-0.001571f,-0.012152f,-0.000612f,-0.001538f,-0.0166f,0.00142f,-0.000691f,-0.0166f,-0.000641f,-0.000668f,-0.0166f,0.001401f,0.000656f,-0.0166f,-0.000661f,0.000678f,-0.012152f,0.001371f,0.001526f,-0.012152f,-0.00069f,0.001559f,-0.004448f,0.001341f,0.001753f,-0.004448f,-0.000719f,0.001795f,0.012152f,-0.000684f,0.000078f,0.012152f,-0.000618f,-0.000054f,0.004448f,-0.000697f,0.000089f,0.004448f,-0.000605f,-0.000064f,-0.004448f,-0.000605f,-0.000064f,-0.004448f,-0.000697f,0.000089f,-0.012152f,-0.000618f,-0.000054f,-0.012152f,-0.000684f,0.000078f,0.014376f,-0.000628f,-0.001145f,0.014376f,-0.000673f,0.001161f,-0.014376f,-0.000628f,-0.001145f,-0.014376f,-0.000673f,0.001161f,0.014376f,-0.000651f,0.000008f,-0.014376f,-0.000651f,0.000008f};
#define CHA_MOUTH_NUM_SHAPEKEYS 4
const int gMouthNumShapeKeys = CHA_MOUTH_NUM_SHAPEKEYS;
const char* gMouthShapeKeyNames[CHA_MOUTH_NUM_SHAPEKEYS] = {"Basis","open","smile","sad"};
const float gMouthShapeKeyVerts[CHA_MOUTH_NUM_SHAPEKEYS][3*CHA_MOUTH_NUM_VERTS] = {
        /* Basis */ {0.004448f,0.001341f,0.001753f,0.004448f,-0.000719f,0.001795f,0.012152f,0.001371f,0.001526f,0.012152f,-0.00069f,0.001559f,0.0166f,0.001401f,0.000656f,0.0166f,-0.000661f,0.000678f,0.0166f,0.00142f,-0.000691f,0.0166f,-0.000641f,-0.000668f,0.012152f,0.001449f,-0.001571f,0.012152f,-0.000612f,-0.001538f,0.004448f,0.001478f,-0.001808f,0.004448f,-0.000582f,-0.001765f,-0.004448f,0.001478f,-0.001808f,-0.004448f,-0.000582f,-0.001765f,-0.012152f,0.001449f,-0.001571f,-0.012152f,-0.000612f,-0.001538f,-0.0166f,0.00142f,-0.000691f,-0.0166f,-0.000641f,-0.000668f,-0.0166f,0.001401f,0.000656f,-0.0166f,-0.000661f,0.000678f,-0.012152f,0.001371f,0.001526f,-0.012152f,-0.00069f,0.001559f,-0.004448f,0.001341f,0.001753f,-0.004448f,-0.000719f,0.001795f,0.012152f,-0.000684f,0.000078f,0.012152f,-0.000618f,-0.000054f,0.004448f,-0.000697f,0.000089f,0.004448f,-0.000605f,-0.000064f,-0.004448f,-0.000605f,-0.000064f,-0.004448f,-0.000697f,0.000089f,-0.012152f,-0.000618f,-0.000054f,-0.012152f,-0.000684f,0.000078f,0.014376f,-0.000628f,-0.001145f,0.014376f,-0.000673f,0.001161f,-0.014376f,-0.000628f,-0.001145f,-0.014376f,-0.000673f,0.001161f,0.014376f,-0.000651f,0.000008f,-0.014376f,-0.000651f,0.000008f},
        /* open */  {0.004003f,0.000847f,0.007908f,0.004003f,-0.001205f,0.00763f,0.010937f,0.000917f,0.006927f,0.010937f,-0.001134f,0.006609f,0.01494f,0.001167f,0.001119f,0.01494f,-0.000889f,0.000951f,0.01494f,0.001309f,-0.000895f,0.01494f,-0.000747f,-0.001063f,0.010937f,0.001552f,-0.006501f,0.010937f,-0.000499f,-0.006819f,0.004003f,0.001623f,-0.007522f,0.004003f,-0.000429f,-0.0078f,-0.004003f,0.001623f,-0.007522f,-0.004003f,-0.000429f,-0.0078f,-0.010937f,0.001552f,-0.006501f,-0.010937f,-0.000499f,-0.006819f,-0.01494f,0.001309f,-0.000895f,-0.01494f,-0.000747f,-0.001063f,-0.01494f,0.001167f,0.001119f,-0.01494f,-0.000889f,0.000951f,-0.010937f,0.000917f,0.006927f,-0.010937f,-0.001134f,0.006609f,-0.004003f,0.000847f,0.007908f,-0.004003f,-0.001205f,0.00763f,0.010937f,-0.000943f,0.002785f,0.010937f,-0.00069f,-0.003019f,0.004003f,-0.001042f,0.005533f,0.004003f,-0.000594f,-0.005686f,-0.004003f,-0.000594f,-0.005686f,-0.004003f,-0.001042f,0.005533f,-0.010937f,-0.00069f,-0.003019f,-0.010937f,-0.000943f,0.002785f,0.012939f,-0.000691f,-0.001775f,0.012939f,-0.000946f,0.001671f,-0.012939f,-0.000691f,-0.001775f,-0.012939f,-0.000946f,0.001671f,0.012939f,-0.000818f,-0.000052f,-0.012939f,-0.000818f,-0.000052f},
        /* smile */ {0.005205f,0.001343f,0.001798f,0.005205f,-0.000718f,0.001809f,0.014221f,0.001478f,0.003938f,0.014221f,-0.000584f,0.003934f,0.019427f,0.001581f,0.004712f,0.019427f,-0.000482f,0.00469f,0.019427f,0.001582f,0.002951f,0.019427f,-0.000481f,0.002929f,0.014221f,0.001417f,-0.0023f,0.014221f,-0.000646f,-0.002304f,0.005205f,0.001328f,-0.005198f,0.005205f,-0.000734f,-0.005186f,-0.005205f,0.001328f,-0.005198f,-0.005205f,-0.000734f,-0.005186f,-0.014221f,0.001417f,-0.0023f,-0.014221f,-0.000646f,-0.002304f,-0.019427f,0.001582f,0.002951f,-0.019427f,-0.000481f,0.002929f,-0.019427f,0.001581f,0.004712f,-0.019427f,-0.000482f,0.00469f,-0.014221f,0.001478f,0.003938f,-0.014221f,-0.000584f,0.003934f,-0.005205f,0.001343f,0.001798f,-0.005205f,-0.000718f,0.001809f,0.014221f,-0.00059f,0.00218f,0.014221f,-0.00064f,-0.00055f,0.005205f,-0.00071f,-0.000204f,0.005205f,-0.000743f,-0.003176f,-0.005205f,-0.000743f,-0.003176f,-0.005205f,-0.00071f,-0.000204f,-0.014221f,-0.00064f,-0.00055f,-0.014221f,-0.00059f,0.00218f,0.016824f,-0.000578f,-0.000018f,0.016824f,-0.000522f,0.004557f,-0.016824f,-0.000578f,-0.000018f,-0.016824f,-0.000522f,0.004557f,0.016824f,-0.000532f,0.002678f,-0.016824f,-0.000532f,0.002678f},
        /* sad */	{0.004095f,0.001514f,0.005641f,0.004095f,-0.000548f,0.005653f,0.011188f,0.001331f,0.000628f,0.011188f,-0.000732f,0.000624f,0.015283f,0.001244f,-0.00286f,0.015283f,-0.000819f,-0.002881f,0.015283f,0.001225f,-0.005064f,0.015283f,-0.000838f,-0.005086f,0.011188f,0.001322f,-0.004439f,0.011188f,-0.000741f,-0.004443f,0.004095f,0.001496f,-0.001416f,0.004095f,-0.000566f,-0.001405f,-0.004095f,0.001496f,-0.001416f,-0.004095f,-0.000566f,-0.001405f,-0.011188f,0.001322f,-0.004439f,-0.011188f,-0.000741f,-0.004443f,-0.015283f,0.001225f,-0.005064f,-0.015283f,-0.000838f,-0.005086f,-0.015283f,0.001244f,-0.00286f,-0.015283f,-0.000819f,-0.002881f,-0.011188f,0.001331f,0.000628f,-0.011188f,-0.000732f,0.000624f,-0.004095f,0.001514f,0.005641f,-0.004095f,-0.000548f,0.005653f,0.011188f,-0.000738f,-0.00113f,0.011188f,-0.000735f,-0.00269f,0.004095f,-0.000539f,0.00364f,0.004095f,-0.000575f,0.000605f,-0.004095f,-0.000575f,0.000605f,-0.004095f,-0.000539f,0.00364f,-0.011188f,-0.000735f,-0.00269f,-0.011188f,-0.000738f,-0.00113f,0.013235f,-0.000801f,-0.005031f,0.013235f,-0.000758f,-0.00073f,-0.013235f,-0.000801f,-0.005031f,-0.013235f,-0.000758f,-0.00073f,0.013235f,-0.000811f,-0.003584f,-0.013235f,-0.000811f,-0.003584f}
};
const float offset[3]={0.f,-0.050791f,-0.041171f};  /* values manually adjusted */
#undef CHA_MOUTH_NUM_SHAPEKEYS
#undef CHA_MOUTH_NUM_VERTS
#undef CHA_MOUTH_NUM_INDS
#undef CHA_MOUTH_NUM_MATERIALS

int i;
float parent_offset_matrix[16] = {1.f,0.f,0.f,0.f,    0.f,1.f,0.f,0.f,    0.f,0.f,1.f,0.f,    0.f,0.f,0.f,1.f};
cha_mesh_init(p,"mouth",CHA_MESH_NAME_MOUTH,gMouthVerts,gMouthNumVerts,gMouthInds,gMouthNumInds);
cha_mesh_add_mesh_parts(p,gMouthNumMaterials,gMouthMaterialIdx,gMouthNumIndsPerMaterial);
cha_mesh_add_shape_keys(p,gMouthNumShapeKeys,gMouthShapeKeyNames,&gMouthShapeKeyVerts[0][0]);
for (i=0;i<3;i++) parent_offset_matrix[12+i]=offset[i];
cha_mesh_set_parent_mesh(p,CHA_MESH_NAME_HEAD,parent_offset_matrix,NULL);

}


void cha_mesh_init_eye(struct cha_mesh* p)   {
/* eye */
#define CHA_EYE_NUM_MATERIALS 5
const int gEyeNumMaterials = CHA_EYE_NUM_MATERIALS;
const int gEyeMaterialIdx[CHA_EYE_NUM_MATERIALS] = {1,3,5,0,9};
#define CHA_EYE_NUM_INDS (72+18+42+18+36)
const int gEyeNumInds = CHA_EYE_NUM_INDS;
const int gEyeNumIndsPerMaterial[CHA_EYE_NUM_MATERIALS+1] = {0,72,(72+18),(72+18+42),(72+18+42+18),(72+18+42+18+36)}; /* last must be CHA_EYE_NUM_INDS */
const unsigned short gEyeInds[CHA_EYE_NUM_INDS] = {/* matIdx: 1 */ 0,1,3,3,2,0,2,3,5,5,4,2,4,5,7,7,6,4,6,7,9,9,8,6,8,9,11,11,10,8,10,11,1,1,0,10,3,1,16,16,17,3,1,11,15,15,16,1,11,9,14,14,15,11,9,7,13,13,14,9,7,5,12,12,13,7,3,17,12,12,5,3,
                   /* matIdx: 3 */ 13,12,18,14,13,18,15,14,18,15,18,16,17,16,18,17,18,12,
                   /* matIdx: 5 */ 23,26,25,25,19,23,22,20,24,24,21,22,27,24,20,24,27,29,28,30,29,29,27,28,28,26,30,26,28,25,28,27,20,20,25,28,22,19,25,25,20,22,
                   /* matIdx: 0 */ 33,34,35,35,38,33,31,32,36,36,37,31,34,31,37,37,35,34,
                   /* matIdx: 9 */ 40,41,45,45,48,40,43,44,47,47,50,43,39,40,48,48,49,39,41,42,46,46,45,41,44,39,49,49,47,44,42,43,50,50,46,42};
#define CHA_EYE_NUM_VERTS 51
const int gEyeNumVerts = CHA_EYE_NUM_VERTS;
const float gEyeVerts[3*CHA_EYE_NUM_VERTS] = {0.003042f,0.000497f,0.003039f,0.002946f,-0.000131f,0.002863f,0.006083f,0.000497f,-0.002563f,0.005892f,-0.000131f,-0.002563f,0.003042f,0.000497f,-0.008166f,0.002946f,-0.000131f,-0.00799f,-0.003042f,0.000497f,-0.008166f,-0.002946f,-0.000131f,-0.00799f,-0.006083f,0.000497f,-0.002563f,-0.005892f,-0.000131f,-0.002563f,-0.003042f,0.000497f,0.003039f,-0.002946f,-0.000131f,0.002863f,0.001521f,-0.000293f,-0.005365f,-0.001521f,-0.000293f,-0.005365f,-0.003042f,-0.000293f,-0.002563f,-0.001521f,-0.000293f,0.000238f,0.001521f,-0.000293f,0.000238f,0.003042f,-0.000293f,-0.002563f,-0.f,-0.000293f,-0.002563f,-0.006387f,0.000497f,0.005129f,0.006387f,-0.000792f,0.005129f,0.01188f,0.000497f,-0.002563f,0.006387f,0.000497f,0.005129f,-0.01188f,0.000497f,-0.002563f,0.01188f,-0.000792f,-0.002563f,-0.006387f,-0.000792f,0.005129f,-0.01188f,-0.000792f,-0.002563f,0.006387f,-0.000792f,0.004065f,-0.006387f,-0.000792f,0.004065f,0.006387f,-0.000792f,0.002943f,-0.006387f,-0.000792f,0.002943f,0.004789f,-0.000219f,0.008496f,0.010169f,-0.000219f,0.003165f,-0.010169f,-0.000219f,0.003165f,-0.004789f,-0.000219f,0.008496f,-0.007379f,-0.000219f,0.011129f,0.013184f,-0.000219f,0.003165f,0.007379f,-0.000219f,0.011129f,-0.013184f,-0.000219f,0.003165f,0.003042f,0.000497f,0.003039f,0.006083f,0.000497f,-0.002563f,0.003042f,0.000497f,-0.008166f,-0.003042f,0.000497f,-0.008166f,-0.006083f,0.000497f,-0.002563f,-0.003042f,0.000497f,0.003039f,0.006387f,0.000497f,-0.008614f,-0.006387f,0.000497f,-0.008614f,-0.006387f,0.000497f,0.005129f,0.01188f,0.000497f,-0.002563f,0.006387f,0.000497f,0.005129f,-0.01188f,0.000497f,-0.002563f};
#define CHA_EYE_NUM_SHAPEKEYS 6
const int gEyeNumShapeKeys = CHA_EYE_NUM_SHAPEKEYS;
const char* gEyeShapeKeyNames[CHA_EYE_NUM_SHAPEKEYS] = {"Basis","closed","right","left","up","down"};
const float gEyeShapeKeyVerts[CHA_EYE_NUM_SHAPEKEYS][3*CHA_EYE_NUM_VERTS] = {
        /* Basis */ {0.003042f,0.000497f,0.003039f,0.002946f,-0.000131f,0.002863f,0.006083f,0.000497f,-0.002563f,0.005892f,-0.000131f,-0.002563f,0.003042f,0.000497f,-0.008166f,0.002946f,-0.000131f,-0.00799f,-0.003042f,0.000497f,-0.008166f,-0.002946f,-0.000131f,-0.00799f,-0.006083f,0.000497f,-0.002563f,-0.005892f,-0.000131f,-0.002563f,-0.003042f,0.000497f,0.003039f,-0.002946f,-0.000131f,0.002863f,0.001521f,-0.000293f,-0.005365f,-0.001521f,-0.000293f,-0.005365f,-0.003042f,-0.000293f,-0.002563f,-0.001521f,-0.000293f,0.000238f,0.001521f,-0.000293f,0.000238f,0.003042f,-0.000293f,-0.002563f,-0.f,-0.000293f,-0.002563f,-0.006387f,0.000497f,0.005129f,0.006387f,-0.000792f,0.005129f,0.01188f,0.000497f,-0.002563f,0.006387f,0.000497f,0.005129f,-0.01188f,0.000497f,-0.002563f,0.01188f,-0.000792f,-0.002563f,-0.006387f,-0.000792f,0.005129f,-0.01188f,-0.000792f,-0.002563f,0.006387f,-0.000792f,0.004065f,-0.006387f,-0.000792f,0.004065f,0.006387f,-0.000792f,0.002943f,-0.006387f,-0.000792f,0.002943f,0.004789f,-0.000219f,0.008496f,0.010169f,-0.000219f,0.003165f,-0.010169f,-0.000219f,0.003165f,-0.004789f,-0.000219f,0.008496f,-0.007379f,-0.000219f,0.011129f,0.013184f,-0.000219f,0.003165f,0.007379f,-0.000219f,0.011129f,-0.013184f,-0.000219f,0.003165f,0.003042f,0.000497f,0.003039f,0.006083f,0.000497f,-0.002563f,0.003042f,0.000497f,-0.008166f,-0.003042f,0.000497f,-0.008166f,-0.006083f,0.000497f,-0.002563f,-0.003042f,0.000497f,0.003039f,0.006387f,0.000497f,-0.008614f,-0.006387f,0.000497f,-0.008614f,-0.006387f,0.000497f,0.005129f,0.01188f,0.000497f,-0.002563f,0.006387f,0.000497f,0.005129f,-0.01188f,0.000497f,-0.002563f},
        /* closed */  {0.003042f,0.000468f,0.002097f,0.002946f,-0.000158f,0.001946f,0.006083f,0.000498f,-0.002823f,0.005892f,-0.000129f,-0.00282f,0.003042f,0.000529f,-0.007743f,0.002946f,-0.000099f,-0.007585f,-0.003042f,0.000529f,-0.007743f,-0.002946f,-0.000099f,-0.007585f,-0.006083f,0.000498f,-0.002823f,-0.005892f,-0.000129f,-0.00282f,-0.003042f,0.000468f,0.002097f,-0.002946f,-0.000158f,0.001946f,0.001521f,-0.000273f,-0.005816f,-0.001521f,-0.000273f,-0.005816f,-0.003042f,-0.000288f,-0.003356f,-0.001521f,-0.000303f,-0.000896f,0.001521f,-0.000303f,-0.000896f,0.003042f,-0.000288f,-0.003356f,-0.f,-0.000288f,-0.003356f,-0.006387f,0.000455f,0.00419f,0.006387f,-0.000834f,0.004197f,0.01188f,0.000497f,-0.002565f,0.006387f,0.000455f,0.00419f,-0.01188f,0.000497f,-0.002565f,0.01188f,-0.000792f,-0.002558f,-0.006387f,-0.000834f,0.004197f,-0.01188f,-0.000792f,-0.002558f,0.006387f,-0.000801f,-0.001131f,-0.006387f,-0.000801f,-0.001131f,0.006387f,-0.000819f,-0.00794f,-0.006387f,-0.000819f,-0.00794f,0.004789f,-0.000219f,0.007393f,0.010169f,-0.000219f,0.003165f,-0.010169f,-0.000219f,0.003165f,-0.004789f,-0.000219f,0.007393f,-0.007379f,-0.000219f,0.010027f,0.013184f,-0.000219f,0.003165f,0.007379f,-0.000219f,0.010027f,-0.013184f,-0.000219f,0.003165f,0.003042f,0.000468f,0.002097f,0.006083f,0.000498f,-0.002823f,0.003042f,0.000529f,-0.007743f,-0.003042f,0.000529f,-0.007743f,-0.006083f,0.000498f,-0.002823f,-0.003042f,0.000468f,0.002097f,0.006387f,0.000529f,-0.007879f,-0.006387f,0.000529f,-0.007879f,-0.006387f,0.000455f,0.00419f,0.01188f,0.000497f,-0.002565f,0.006387f,0.000455f,0.00419f,-0.01188f,0.000497f,-0.002565f},
        /* right */ {-0.000109f,0.000497f,0.003039f,-0.000205f,-0.000131f,0.002863f,0.002932f,0.000497f,-0.002563f,0.002741f,-0.000131f,-0.002563f,-0.000109f,0.000497f,-0.008166f,-0.000205f,-0.000131f,-0.00799f,-0.006192f,0.000497f,-0.008166f,-0.006097f,-0.000131f,-0.00799f,-0.009234f,0.000497f,-0.002563f,-0.009043f,-0.000131f,-0.002563f,-0.006192f,0.000497f,0.003039f,-0.006097f,-0.000131f,0.002863f,-0.00163f,-0.000293f,-0.005365f,-0.004672f,-0.000293f,-0.005365f,-0.006192f,-0.000293f,-0.002563f,-0.004672f,-0.000293f,0.000238f,-0.00163f,-0.000293f,0.000238f,-0.000109f,-0.000293f,-0.002563f,-0.003151f,-0.000293f,-0.002563f,-0.006387f,0.000497f,0.005129f,0.006387f,-0.000792f,0.005129f,0.01188f,0.000497f,-0.002563f,0.006387f,0.000497f,0.005129f,-0.01188f,0.000497f,-0.002563f,0.01188f,-0.000792f,-0.002563f,-0.006387f,-0.000792f,0.005129f,-0.01188f,-0.000792f,-0.002563f,0.006387f,-0.000792f,0.004065f,-0.006387f,-0.000792f,0.004065f,0.006387f,-0.000792f,0.002943f,-0.006387f,-0.000792f,0.002943f,0.004789f,-0.000219f,0.008496f,0.010169f,-0.000219f,0.003165f,-0.010169f,-0.000219f,0.003165f,-0.004789f,-0.000219f,0.008496f,-0.007379f,-0.000219f,0.011129f,0.013184f,-0.000219f,0.003165f,0.007379f,-0.000219f,0.011129f,-0.013184f,-0.000219f,0.003165f,-0.000109f,0.000497f,0.003039f,0.002932f,0.000497f,-0.002563f,-0.000109f,0.000497f,-0.008166f,-0.006192f,0.000497f,-0.008166f,-0.009234f,0.000497f,-0.002563f,-0.006192f,0.000497f,0.003039f,0.006387f,0.000497f,-0.008614f,-0.006387f,0.000497f,-0.008614f,-0.006387f,0.000497f,0.005129f,0.01188f,0.000497f,-0.002563f,0.006387f,0.000497f,0.005129f,-0.01188f,0.000497f,-0.002563f},
        /* left */	{0.006192f,0.000497f,0.003039f,0.006097f,-0.000131f,0.002863f,0.009234f,0.000497f,-0.002563f,0.009043f,-0.000131f,-0.002563f,0.006192f,0.000497f,-0.008166f,0.006097f,-0.000131f,-0.00799f,0.000109f,0.000497f,-0.008166f,0.000205f,-0.000131f,-0.00799f,-0.002932f,0.000497f,-0.002563f,-0.002741f,-0.000131f,-0.002563f,0.000109f,0.000497f,0.003039f,0.000205f,-0.000131f,0.002863f,0.004672f,-0.000293f,-0.005365f,0.00163f,-0.000293f,-0.005365f,0.000109f,-0.000293f,-0.002563f,0.00163f,-0.000293f,0.000238f,0.004672f,-0.000293f,0.000238f,0.006192f,-0.000293f,-0.002563f,0.003151f,-0.000293f,-0.002563f,-0.006387f,0.000497f,0.005129f,0.006387f,-0.000792f,0.005129f,0.01188f,0.000497f,-0.002563f,0.006387f,0.000497f,0.005129f,-0.01188f,0.000497f,-0.002563f,0.01188f,-0.000792f,-0.002563f,-0.006387f,-0.000792f,0.005129f,-0.01188f,-0.000792f,-0.002563f,0.006387f,-0.000792f,0.004065f,-0.006387f,-0.000792f,0.004065f,0.006387f,-0.000792f,0.002943f,-0.006387f,-0.000792f,0.002943f,0.004789f,-0.000219f,0.008496f,0.010169f,-0.000219f,0.003165f,-0.010169f,-0.000219f,0.003165f,-0.004789f,-0.000219f,0.008496f,-0.007379f,-0.000219f,0.011129f,0.013184f,-0.000219f,0.003165f,0.007379f,-0.000219f,0.011129f,-0.013184f,-0.000219f,0.003165f,0.006192f,0.000497f,0.003039f,0.009234f,0.000497f,-0.002563f,0.006192f,0.000497f,-0.008166f,0.000109f,0.000497f,-0.008166f,-0.002932f,0.000497f,-0.002563f,0.000109f,0.000497f,0.003039f,0.006387f,0.000497f,-0.008614f,-0.006387f,0.000497f,-0.008614f,-0.006387f,0.000497f,0.005129f,0.01188f,0.000497f,-0.002563f,0.006387f,0.000497f,0.005129f,-0.01188f,0.000497f,-0.002563f},
        /* up */	{0.003042f,0.000497f,0.004667f,0.002946f,-0.000131f,0.004491f,0.006083f,0.000497f,-0.000935f,0.005892f,-0.000131f,-0.000935f,0.003042f,0.000497f,-0.005833f,0.002946f,-0.000131f,-0.006362f,-0.003042f,0.000497f,-0.005833f,-0.002946f,-0.000131f,-0.006362f,-0.006083f,0.000497f,-0.000935f,-0.005892f,-0.000131f,-0.000935f,-0.003042f,0.000497f,0.004667f,-0.002946f,-0.000131f,0.004491f,0.001521f,-0.000293f,-0.002826f,-0.001521f,-0.000293f,-0.002826f,-0.003042f,-0.000293f,-0.000025f,-0.001521f,-0.000293f,0.002776f,0.001521f,-0.000293f,0.002776f,0.003042f,-0.000293f,-0.000025f,-0.f,-0.000293f,-0.000025f,-0.006387f,0.000497f,0.005129f,0.006387f,-0.000792f,0.005129f,0.01188f,0.000497f,-0.002563f,0.006387f,0.000497f,0.005129f,-0.01188f,0.000497f,-0.002563f,0.01188f,-0.000792f,-0.002563f,-0.006387f,-0.000792f,0.005129f,-0.01188f,-0.000792f,-0.002563f,0.006387f,-0.000792f,0.004476f,-0.006387f,-0.000792f,0.004476f,0.006387f,-0.000792f,0.003853f,-0.006387f,-0.000792f,0.003853f,0.004789f,-0.000219f,0.009928f,0.010169f,-0.000219f,0.003165f,-0.010169f,-0.000219f,0.003165f,-0.004789f,-0.000219f,0.009928f,-0.007379f,-0.000219f,0.012561f,0.013184f,-0.000219f,0.003165f,0.007379f,-0.000219f,0.012561f,-0.013184f,-0.000219f,0.003165f,0.003042f,0.000497f,0.004667f,0.006083f,0.000497f,-0.000935f,0.003042f,0.000497f,-0.005833f,-0.003042f,0.000497f,-0.005833f,-0.006083f,0.000497f,-0.000935f,-0.003042f,0.000497f,0.004667f,0.006387f,0.000497f,-0.007909f,-0.006387f,0.000497f,-0.007909f,-0.006387f,0.000497f,0.005129f,0.01188f,0.000497f,-0.002563f,0.006387f,0.000497f,0.005129f,-0.01188f,0.000497f,-0.002563f},
        /* down */ {0.003042f,0.000488f,0.002492f,0.002946f,-0.000139f,0.002325f,0.006083f,0.000499f,-0.00287f,0.005892f,-0.000129f,-0.002869f,0.003042f,0.000509f,-0.008233f,0.002946f,-0.000118f,-0.008063f,-0.003042f,0.000509f,-0.008233f,-0.002946f,-0.000118f,-0.008063f,-0.006083f,0.000499f,-0.00287f,-0.005892f,-0.000129f,-0.002869f,-0.003042f,0.000488f,0.002492f,-0.002946f,-0.000139f,0.002325f,0.001521f,-0.000284f,-0.006663f,-0.001521f,-0.000284f,-0.006663f,-0.003042f,-0.000289f,-0.003982f,-0.001521f,-0.000294f,-0.001301f,0.001521f,-0.000294f,-0.001301f,0.003042f,-0.000289f,-0.003982f,-0.f,-0.000289f,-0.003982f,-0.006387f,0.000483f,0.004829f,0.006387f,-0.000806f,0.004831f,0.01188f,0.000498f,-0.002534f,0.006387f,0.000483f,0.004829f,-0.01188f,0.000498f,-0.002534f,0.01188f,-0.000791f,-0.002532f,-0.006387f,-0.000806f,0.004831f,-0.01188f,-0.000791f,-0.002532f,0.006387f,-0.000802f,0.003048f,-0.006387f,-0.000802f,0.003048f,0.006387f,-0.000798f,0.001131f,-0.006387f,-0.000798f,0.001131f,0.004789f,-0.000219f,0.008238f,0.010169f,-0.000219f,0.002134f,-0.010169f,-0.000219f,0.002134f,-0.004789f,-0.000219f,0.008238f,-0.007379f,-0.000219f,0.010871f,0.013184f,-0.000219f,0.002134f,0.007379f,-0.000219f,0.010871f,-0.013184f,-0.000219f,0.002134f,0.003042f,0.000488f,0.002492f,0.006083f,0.000499f,-0.00287f,0.003042f,0.000509f,-0.008233f,-0.003042f,0.000509f,-0.008233f,-0.006083f,0.000499f,-0.00287f,-0.003042f,0.000488f,0.002492f,0.006387f,0.00051f,-0.008326f,-0.006387f,0.00051f,-0.008326f,-0.006387f,0.000483f,0.004829f,0.01188f,0.000498f,-0.002534f,0.006387f,0.000483f,0.004829f,-0.01188f,0.000498f,-0.002534f}
        };
const float gEyeLocations[2][3] = {{-0.0185f,-0.053676f,0.015f},{0.0185f,-0.053676f,0.015f}};  /* values manually adjusted */
#undef CHA_EYE_NUM_SHAPEKEYS
#undef CHA_EYE_NUM_VERTS
#undef CHA_EYE_NUM_INDS
#undef CHA_EYE_NUM_MATERIALS
int i;
cha_mesh_init(p,"eye",CHA_MESH_NAME_EYE,gEyeVerts,gEyeNumVerts,gEyeInds,gEyeNumInds);
cha_mesh_add_mesh_parts(p,gEyeNumMaterials,gEyeMaterialIdx,gEyeNumIndsPerMaterial);
cha_mesh_add_shape_keys(p,gEyeNumShapeKeys,gEyeShapeKeyNames,&gEyeShapeKeyVerts[0][0]);

{
    float parent_offset_matrix[16] = {1.f,0.f,0.f,0.f,    0.f,1.f,0.f,0.f,    0.f,0.f,1.f,0.f,    0.f,0.f,0.f,1.f};
    float parent_offset_matrix_link[16] = {1.f,0.f,0.f,0.f,    0.f,1.f,0.f,0.f,    0.f,0.f,1.f,0.f,    0.f,0.f,0.f,1.f};
    for (i=0;i<3;i++) {
        parent_offset_matrix[12+i] = gEyeLocations[0][i];
        parent_offset_matrix_link[12+i] = gEyeLocations[1][i];
    }
    cha_mesh_set_parent_mesh(p,CHA_MESH_NAME_HEAD,parent_offset_matrix,parent_offset_matrix_link);
}

}



/* material names */
void cha_materials_init_names(struct cha_material_names* p)  {
    const char* gMaterialNames[CHA_MATERIAL_NAME_COUNT] = {"hair","irid","lips","pupil","shoes-belt","skin","t-shirt","teeth","trousers","white_eye"};
    cha_material_names_init(p,gMaterialNames);
}
/* materials */
void cha_materials_reset(struct cha_material materials[CHA_MATERIAL_NAME_COUNT])    {
    /* Each entry contains 12 floats: amb[4]+dif[4]+spe[3]+shi */
    /*const float gMaterials[CHA_MATERIAL_NAME_COUNT][12] = {
        {0.0383f,0.0185f,0.0045f,1.f,0.0548f,0.0265f,0.0064f,1.f,0.0141f,0.0054f,0.0005f,0.103922f},
        {0.0243f,0.56f,0.0173f,1.f,0.0346f,0.8f,0.0248f,1.f,0.3949f,1.f,0.3832f,0.272549f},
        {0.285f,0.044f,0.0172f,1.f,0.4071f,0.0628f,0.0246f,1.f,0.5724f,0.1548f,0.0911f,0.17451f},
        {0.f,0.f,0.f,1.f,0.f,0.f,0.f,1.f,0.0546f,0.0546f,0.0546f,0.309804f},
        {0.0534f,0.0261f,0.0065f,1.f,0.0762f,0.0373f,0.0093f,1.f,0.0631f,0.0396f,0.0184f,0.194118f},
        {0.4608f,0.2588f,0.2107f,1.f,0.6582f,0.3697f,0.301f,1.f,0.0596f,0.0281f,0.0203f,0.096078f},
        {0.1446f,0.0054f,0.0002f,1.f,0.2065f,0.0078f,0.0002f,1.f,0.0147f,0.0032f,0.002f,0.056863f},
        {0.448f,0.448f,0.448f,1.f,0.64f,0.64f,0.64f,1.f,1.f,1.f,1.f,0.586275f},
        {0.0172f,0.0438f,0.1229f,1.f,0.0246f,0.0625f,0.1756f,1.f,0.0069f,0.0142f,0.0336f,0.076471f},
        {0.4834f,0.4834f,0.4834f,1.f,0.6906f,0.6906f,0.6906f,1.f,1.f,1.f,1.f,0.096078f}
    };*/
    const float gMaterials[CHA_MATERIAL_NAME_COUNT][12] = {
        {0.0767f*CHA_LIGHTNESS,0.0371f*CHA_LIGHTNESS,0.009f*CHA_LIGHTNESS,1.f,0.1096f*CHA_LIGHTNESS,0.053f*CHA_LIGHTNESS,0.0128f*CHA_LIGHTNESS,1.f,0.0282f*CHA_LIGHTNESS,0.0108f*CHA_LIGHTNESS,0.001f*CHA_LIGHTNESS,0.103922f},
        {0.0485f*CHA_LIGHTNESS,1.f*CHA_LIGHTNESS,0.0347f*CHA_LIGHTNESS,1.f,0.0693f*CHA_LIGHTNESS,1.f*CHA_LIGHTNESS,0.0495f*CHA_LIGHTNESS,1.f,0.7898f*CHA_LIGHTNESS,2.f*CHA_LIGHTNESS,0.7665f*CHA_LIGHTNESS,0.272549f},
        {0.5699f*CHA_LIGHTNESS,0.088f*CHA_LIGHTNESS,0.0344f*CHA_LIGHTNESS,1.f,0.8142f*CHA_LIGHTNESS,0.1257f*CHA_LIGHTNESS,0.0492f*CHA_LIGHTNESS,1.f,1.f*CHA_LIGHTNESS,0.3096f*CHA_LIGHTNESS,0.1821f*CHA_LIGHTNESS,0.17451f},
        {0.f*CHA_LIGHTNESS,0.f*CHA_LIGHTNESS,0.f*CHA_LIGHTNESS,1.f,0.f*CHA_LIGHTNESS,0.f*CHA_LIGHTNESS,0.f*CHA_LIGHTNESS,1.f,0.1091f*CHA_LIGHTNESS,0.1091f*CHA_LIGHTNESS,0.1091f*CHA_LIGHTNESS,0.309804f},
        {0.1067f*CHA_LIGHTNESS,0.0523f*CHA_LIGHTNESS,0.013f*CHA_LIGHTNESS,1.f,0.1525f*CHA_LIGHTNESS,0.0747f*CHA_LIGHTNESS,0.0186f*CHA_LIGHTNESS,1.f,0.1263f*CHA_LIGHTNESS,0.0791f*CHA_LIGHTNESS,0.0368f*CHA_LIGHTNESS,0.194118f},
        {0.9215f*CHA_LIGHTNESS,0.5175f*CHA_LIGHTNESS,0.4214f*CHA_LIGHTNESS,1.f,1.f*CHA_LIGHTNESS,0.7393f*CHA_LIGHTNESS,0.602f*CHA_LIGHTNESS,1.f,0.1191f*CHA_LIGHTNESS,0.0563f*CHA_LIGHTNESS,0.0406f*CHA_LIGHTNESS,0.096078f},
        {0.2892f*CHA_LIGHTNESS,0.0109f*CHA_LIGHTNESS,0.0003f*CHA_LIGHTNESS,1.f,0.4131f*CHA_LIGHTNESS,0.0156f*CHA_LIGHTNESS,0.0005f*CHA_LIGHTNESS,1.f,0.0295f*CHA_LIGHTNESS,0.0065f*CHA_LIGHTNESS,0.004f*CHA_LIGHTNESS,0.056863f},
        {0.896f*CHA_LIGHTNESS,0.896f*CHA_LIGHTNESS,0.896f*CHA_LIGHTNESS,1.f,1.f*CHA_LIGHTNESS,1.f*CHA_LIGHTNESS,1.f*CHA_LIGHTNESS,1.f,2.f*CHA_LIGHTNESS,2.f*CHA_LIGHTNESS,2.f*CHA_LIGHTNESS,0.586275f},
        {0.0344f*CHA_LIGHTNESS,0.0876f*CHA_LIGHTNESS,0.2459f*CHA_LIGHTNESS,1.f,0.0491f*CHA_LIGHTNESS,0.1251f*CHA_LIGHTNESS,0.3512f*CHA_LIGHTNESS,1.f,0.0137f*CHA_LIGHTNESS,0.0283f*CHA_LIGHTNESS,0.0673f*CHA_LIGHTNESS,0.076471f},
        {0.9668f*CHA_LIGHTNESS,0.9668f*CHA_LIGHTNESS,0.9668f*CHA_LIGHTNESS,1.f,1.f*CHA_LIGHTNESS,1.f*CHA_LIGHTNESS,1.f*CHA_LIGHTNESS,1.f,2.f*CHA_LIGHTNESS,2.f*CHA_LIGHTNESS,2.f*CHA_LIGHTNESS,0.096078f}
    };
    int i;
    const float* pMat = &gMaterials[0][0];
    for (i=0;i<CHA_MATERIAL_NAME_COUNT;i++)   {
        cha_material_init(&materials[i],&pMat[0],&pMat[4],&pMat[8],pMat[11]);
        pMat+=12;
    }
}


#endif /* CHARACTER_INL_DEF */
#endif /* CHA_IMPLEMENTATION_GUARD */


